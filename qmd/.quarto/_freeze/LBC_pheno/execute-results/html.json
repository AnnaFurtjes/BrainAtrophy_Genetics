{
  "hash": "c6488e9599a8dc5097c181b7e6740692",
  "result": {
    "markdown": "---\ntitle: \"LBC1936: Phenotypic data preparation\"\nformat: \n  html:\n    code-fold: true\nauthor: \"Anna Elisabeth Furtjes\"\ndate: \"12 February 2025\"\noutput: html\ndoi: 10.1101/2024.11.06.622274\n---\n\n\n------------------------------------------------------------------------\n\n\n\n\n\n\nData prepared here was used as input into analyses presented [here](pheno_assocs.html). The file containing all  phenotypic variables was named `LBC1936_allPheno.txt`.\n\n## Load packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(data.table)\n```\n:::\n\n\n## Function for longitudinal plots\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# write function to plot longitudinal  data\nplot_long = function(dat = data, id.var = \"lbc36no\", var = \"matreas\"){\n\n\t# make sure dat is data.frame\n\tdat = as.data.frame(dat)\n  # select data for the chosen cognitive test\n  dat = dat[,c(which(names(dat) == id.var), grep(var, names(dat)))]\n\n  # transform wide to long format\n  long <- reshape2::melt(dat, id.vars = id.var, value.name = var)\n  names(long)[which(names(long) == \"variable\")] = \"Wave\"\n  names(long)[which(names(long) == var)] = \"var\"\n  names(long)[which(names(long) == id.var)] = \"id.var\"\n  # remove redundant naming from waves\n  long$Wave = as.numeric(sub(\".*_w\", \"\", long$Wave))\n\n  plot = ggplot(data = long, aes(x = Wave, y = var, group = id.var))+\n  geom_point(color = \"#82A0D8\", size = .5)+\n  geom_line(aes(group=as.factor(id.var)),method=\"lm\", se=F, color = \"#8DDFCB\", size = 0.2, alpha = .2, stat =  \"smooth\") +\n    theme(legend.position = \"none\")+\n    theme_bw()+\n    theme(text = element_text(size=20),\n          plot.margin=unit(c(1, 1, 1, 1), \"cm\"),\n          axis.text.y = element_text(size =20),\n          axis.text.x = element_text(size =20),\n          panel.border = element_blank())\n\n  return(plot)\n}\n```\n:::\n\n\n\n## Cognitive tests (factor scores)\n\nThis script was kindly provided  by Joanna Moodie who had modelled a general factor of cognitive ability in the LBC1936 for one of her projects.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#######################################\n## Read in and format data\n######################################\n\n# read data\ndata = foreign::read.spss(paste0(target, \"/LBC1936_BrainAtrophy_AF_07NOV2023.sav\"), to.data.frame=T)\n\n##########################################################\n### Format data\n##########################################################\n\ndata=data[,c(\"lbc36no\",\n              \"matreas_w1\",\"matreas_w2\",\"matreas_w3\",\"matreas_w4\",\"matreas_w5\",\n              \"blkdes_w1\",\"blkdes_w2\",\"blkdes_w3\",\"blkdes_w4\",\"blkdes_w5\",\n              \"spantot_w1\",\"spantot_w2\",\"spantot_w3\",\"spantot_w4\",\"spantot_w5\",\n              \"vpatotal_w1\",\"vpatotal_w2\",\"vpatotal_w3\",\"vpatotal_w4\",\"vpa_total_w5\",\n              \"lmtotal_w1\",\"lmtotal_w2\",\"lmtotal_w3\",\"lmtotal_w4\",\"lmtotal_w5\",\n              \"digback_w1\",\"digback_w2\",\"digback_w3\",\"digback_w4\",\"digback_w5\",\n              \"nart_w1\",\"nart_w2\",\"nart_total_w3\",\"nart_total_w4\",\"nart_total_w5\",\n              \"wtar_w1\",\"wtar_w2\",\"wtar_total_w3\",\"wtar_total_w4\",\"wtar_total_w5\",\n              \"vftot_w1\",\"vftot_w2\",\"vftot_w3\" ,\"vftot_w4\",\"vftot_w5\",\n              \"digsym_w1\",\"digsym_w2\",\"digsym_w3\",\"digsym_w4\",\"digsym_w5\",\n              \"symsear_w1\",\"symsear_w2\",\"symsear_w3\",\"symsear_w4\",\"symsear_w5\",\n              \"crtmean_w1\",\"crtmean_w2\",\"crtmean_w3\",\"crtmean_w4\",\"crtmean_w5\",\n              \"ittotal_w1\",\"ittotal_w2\",\"ittotal_w3\",\"ittotal_w4\",\"ittotal_w5\")]\n\n\n# recode missing values\ndata[data == -999] <- NA\ndata[data == -777] <- NA\ndata[data == 999] <- NA\ndata[data == 888] <- NA\ndata[data == -888] <- NA\n\n# assign correct variable classes\n# some numeric columns are coded as factors when some should be integers and some should be numeric\n# the code below transforms variables first into characters, then numeric because some of the values otherwise get corrupted\nIntNames = names(data)[-grep(\"crtmean\", names(data))]\nIntNames = IntNames[-which(IntNames == \"lbc36no\")]\ndata[IntNames] = lapply(data[IntNames], as.character)\ndata[IntNames] = lapply(data[IntNames], as.integer)\n\nNumNames = names(data)[grep(\"crtmean\", names(data))]\ndata[NumNames] = lapply(data[NumNames], as.character)\ndata[NumNames] = lapply(data[NumNames], as.numeric)\n\n# the symbol search variable has some impossible values (< 0).. these should be removed\nfor (i in names(data)[grep(\"symsear\", names(data))]) {\n  data[which(data[,i] < 0),i] <- NA\n}\n\n#rescaled some of the cognitive test variables so that variances are within a similar\n#range see http://www.statmodel.com/discussion/messages/11/1615.html?1335376547\n\ndset_mod <- mutate(data,\n                   blkdes_w1 = blkdes_w1/2,\n                   blkdes_w2 = blkdes_w2/2,\n                   blkdes_w3 = blkdes_w3/2,\n                   blkdes_w4 = blkdes_w4/2,\n                   blkdes_w5 = blkdes_w5/2,\n                   vftot_w1 = vftot_w1/2,\n                   vftot_w2 = vftot_w2/2,\n                   vftot_w3 = vftot_w3/2,\n                   vftot_w4 = vftot_w4/2,\n                   vftot_w5 = vftot_w5/2,\n                   lmtotal_w1 = lmtotal_w1/3,\n                   lmtotal_w2 = lmtotal_w2/3,\n                   lmtotal_w3 = lmtotal_w3/3,\n                   lmtotal_w4 = lmtotal_w4/3,\n                   lmtotal_w5 = lmtotal_w5/3,\n                   digback_w1 = 3*digback_w1,\n                   digback_w2 = 3*digback_w2,\n                   digback_w3 = 3*digback_w3,\n                   digback_w4 = 3*digback_w4,\n                   digback_w5 = 3*digback_w5,\n                   digsym_w1 = digsym_w1/2,\n                   digsym_w2 = digsym_w2/2,\n                   digsym_w3 = digsym_w3/2,\n                   digsym_w4 = digsym_w4/2,\n                   digsym_w5 = digsym_w5/2,\n                   ittotal_w1 = ittotal_w1/2,\n                   ittotal_w2 = ittotal_w2/2,\n                   ittotal_w3 = ittotal_w3/2,\n                   ittotal_w4 = ittotal_w4/2,\n                   ittotal_w5 = ittotal_w5/2,\n                   crtmean_w1 = -50 * crtmean_w1,\n                   crtmean_w2 = -50 * crtmean_w2,\n                   crtmean_w3 = -50 * crtmean_w3,\n                   crtmean_w4 = -50 * crtmean_w4,\n                   crtmean_w5 = -50 * crtmean_w5)\n\n#==================================================================\n# LBC1936 factor of curves model\n#==================================================================\nmodel <- '\n# test growth curves\nImatreas =~ 1*matreas_w1 + 1*matreas_w2 + 1*matreas_w3 + 1*matreas_w4 + 1*matreas_w5\nSmatreas =~ 0*matreas_w1 + 2.98*matreas_w2 + 6.75*matreas_w3 + 9.82*matreas_w4 + 12.54*matreas_w5\n\nIblkdes =~ 1*blkdes_w1 + 1*blkdes_w2 + 1*blkdes_w3 + 1*blkdes_w4 + 1*blkdes_w5\nSblkdes=~ 0*blkdes_w1 + 2.98*blkdes_w2 + 6.75*blkdes_w3 + 9.82*blkdes_w4 + 12.54*blkdes_w5\n\nIspantot =~ 1*spantot_w1 + 1*spantot_w2 + 1*spantot_w3 + 1*spantot_w4 + 1*spantot_w5\nSspantot=~ 0*spantot_w1 + 2.98*spantot_w2 + 6.75*spantot_w3 + 9.82*spantot_w4 + 12.54*spantot_w5\n\nInart =~ 1*nart_w1 + 1*nart_w2 + 1*nart_total_w3 + 1*nart_total_w4 + 1*nart_total_w5\nSnart =~ 0*nart_w1 + 2.98*nart_w2 + 6.75*nart_total_w3 + 9.82*nart_total_w4 + 12.54*nart_total_w5\n\nIwtar =~ 1*wtar_w1 + 1*wtar_w2 + 1*wtar_total_w3 + 1*wtar_total_w4 + 1*wtar_total_w5\nSwtar =~ 0*wtar_w1 + 2.98*wtar_w2 + 6.75*wtar_total_w3 + 9.82*wtar_total_w4 + 12.54*wtar_total_w5\n\nIvftot =~ 1*vftot_w1 + 1*vftot_w2 + 1*vftot_w3 + 1*vftot_w4 + 1*vftot_w5\nSvftot =~ 0*vftot_w1 + 2.98*vftot_w2 + 6.75*vftot_w3 + 9.82*vftot_w4 + 12.54*vftot_w5\n\nIvpatotal =~ 1*vpatotal_w1 + 1*vpatotal_w2 + 1*vpatotal_w3 + 1*vpatotal_w4 + 1*vpa_total_w5\nSvpatotal =~ 0*vpatotal_w1 + 2.98*vpatotal_w2 + 6.75*vpatotal_w3 + 9.82*vpatotal_w4 + 12.54*vpa_total_w5\n\nIlmtotal =~ 1*lmtotal_w1 + 1*lmtotal_w2 + 1*lmtotal_w3 + 1*lmtotal_w4 + 1*lmtotal_w5\nSlmtotal =~ 0*lmtotal_w1 + 2.98*lmtotal_w2 + 6.75*lmtotal_w3 + 9.82*lmtotal_w4 + 12.54*lmtotal_w5\n\nIdigback =~ 1*digback_w1 + 1*digback_w2 + 1*digback_w3 + 1*digback_w4 + 1*digback_w5\nSdigback =~ 0*digback_w1 + 2.98*digback_w2 + 6.75*digback_w3 + 9.82*digback_w4 + 12.54*digback_w5\n\nIsymsear =~ 1*symsear_w1 + 1*symsear_w2 + 1*symsear_w3 + 1*symsear_w4 + 1*symsear_w5\nSsymsear =~ 0*symsear_w1 + 2.98*symsear_w2 + 6.75*symsear_w3 + 9.82*symsear_w4 + 12.54*symsear_w5\n\nIdigsym =~ 1*digsym_w1 + 1*digsym_w2 + 1*digsym_w3 + 1*digsym_w4 + 1*digsym_w5\nSdigsym =~ 0*digsym_w1 + 2.98*digsym_w2 + 6.75*digsym_w3 + 9.82*digsym_w4 + 12.54*digsym_w5\n\nIittotal =~ 1*ittotal_w1 + 1*ittotal_w2 + 1*ittotal_w3 + 1*ittotal_w4 + 1*ittotal_w5\nSittotal =~ 0*ittotal_w1 + 2.98*ittotal_w2 + 6.75*ittotal_w3 + 9.82*ittotal_w4 + 12.54*ittotal_w5\n\nIcrtmean =~ 1*crtmean_w1 + 1*crtmean_w2 + 1*crtmean_w3 + 1*crtmean_w4 + 1*crtmean_w5\nScrtmean =~ 0*crtmean_w1 + 2.98*crtmean_w2 + 6.75*crtmean_w3 + 9.82*crtmean_w4 + 12.54*crtmean_w5\n\n# latent g intercept and slope \nIg =~  Iblkdes + Imatreas  + Ispantot + Ivftot + Ivpatotal + Ilmtotal +\n  Idigback + Isymsear + Idigsym + Icrtmean + Iittotal + Inart + Iwtar \n# \nSg =~ Sblkdes + Smatreas + Sspantot + Svftot + Svpatotal + Slmtotal +\n  Sdigback + Ssymsear + Sdigsym + Scrtmean + Sittotal + Snart + Swtar \n\n#indicator as scaling reference: loading=1, int=0\nIblkdes ~ 0*1\nSblkdes ~ 0*1 \n\n# within-wave covariances between nart and wtar\nnart_w1 ~~ wtar_w1\nnart_w2 ~~ wtar_w2\nnart_total_w3 ~~ wtar_total_w3\nnart_total_w4 ~~ wtar_total_w4\nnart_total_w5 ~~ wtar_total_w5\n\n# within-test intercept-slope covariances\nImatreas ~~ Smatreas\nIblkdes ~~ Sblkdes\n#Ispantot ~~Sspantot\nInart ~~ Snart\nIwtar ~~ Swtar\nIvftot ~~ Svftot\nIvpatotal ~~ Svpatotal\nIlmtotal ~~ Slmtotal\nIdigback ~~ Sdigback\nIsymsear ~~ Ssymsear\nIdigsym ~~ Sdigsym\nIittotal ~~ Sittotal\nIcrtmean ~~ Scrtmean\n\n\n# within-domain intercept-intercept and slope-slope covariances\nIblkdes ~~ Imatreas # Visuospatial domain\nIblkdes ~~ Ispantot\nImatreas ~~ Ispantot\nSblkdes ~~ Smatreas \n#Sblkdes ~~ Sspantot\n#Smatreas ~~ Sspantot\n\nInart ~~ Ivftot #Crystalized domain\nIwtar ~~ Ivftot\nIwtar ~~ Inart\nSnart ~~ Svftot\nSwtar ~~ Svftot\nSwtar ~~ Snart\n\nIlmtotal ~~ Ivpatotal # Verbal memory domain\nIlmtotal ~~ Idigback\nIvpatotal ~~ Idigback\nSlmtotal ~~ Svpatotal\nSlmtotal ~~ Sdigback\nSvpatotal ~~ Sdigback\n\nIittotal ~~ Idigsym #Processing speed domain\nIittotal ~~ Isymsear\nIittotal ~~ Icrtmean\nIdigsym ~~ Isymsear\nIdigsym ~~ Icrtmean\nIsymsear ~~ Icrtmean\nSittotal ~~ Sdigsym \nSittotal ~~ Ssymsear\nSittotal ~~ Scrtmean\nSdigsym ~~ Ssymsear\nSdigsym ~~ Scrtmean\nSsymsear ~~ Scrtmean\n\n#fixed negative residual variance to 0 \nSspantot ~~ 0*Sspantot\n'\n\n# fit model in lavaan \nfit <- growth(model = model, dset_mod,  missing = \"ml.x\")\n#save=standardizedsolution(fit, output=\"data.frame\")\nsummary(fit, fit.measures = T, standardized = T)\n\n#==================================================================\n# extract LBC1936 g intercepts and slopes\n#==================================================================\n\ncogscores <- dset_mod %>% select(contains(\"matreas\") | contains(\"blkdes\") | contains(\"spantot\") | contains(\"nart\") | contains(\"vftot\") | contains(\"vpa\") | contains(\"lmtotal\") | contains(\"digback\") | contains(\"symsear\") | contains(\"digsym\") | contains(\"ittotal\") | contains(\"crtmean\") )\nwavesindex <- rep(c(1,2,3,4,5), 12) # index the waves \n\n# find people that were only tested at one wave only to exclude them from prediction\n# and find people that were not tested at wave 1\nw1 <- matrix(NA, nrow(cogscores), 1)\nw2 <- matrix(NA, nrow(cogscores), 1)\nw3 <- matrix(NA, nrow(cogscores), 1)\nw4 <- matrix(NA, nrow(cogscores), 1)\nw5 <- matrix(NA, nrow(cogscores), 1)\nfor (i in 1:nrow(cogscores)) {\n  if (!all(is.na(cogscores[i, which(wavesindex == 1)]))) {\n    w1[i,1] <- 1 }\n  if (!all(is.na(cogscores[i, which(wavesindex == 2)]))) {\n    w2[i,1] <- 1 }\n  if (!all(is.na(cogscores[i, which(wavesindex == 3)]))) {\n    w3[i,1] <- 1 }\n  if (!all(is.na(cogscores[i, which(wavesindex == 4)]))) {\n    w4[i,1] <- 1 }\n  if (!all(is.na(cogscores[i, which(wavesindex == 5)]))) {\n    w5[i,1] <- 1 }\n}\n\nwavesample <- cbind(w1, w2, w3, w4, w5)\nrowSums(wavesample, na.rm = T)\nonewave <- which(rowSums(wavesample, na.rm = T) < 2) # these people were only tested at one wave\n\n\n# delete participant with all missing data\n#dset_mod1 = dset_mod[-which(rowSums(is.na(dset_mod)) >= (ncol(dset_mod)-1)),]\n\n# extract factor scores\nfactorScores <- data.frame(lavPredict(fit, dset_mod, \n                 type =\"lv\", \n                 method = \"regression\", \n                 label = TRUE))\n\n# set slopes for participants who were only tested at one wave to NA\nfactorScores$Sg[onewave] <- NA \n# set intercepts for participants who were not tested at w1 to NA \nfactorScores$Ig[which(is.na(w1))] <- NA \n# add participant ID back to factor scores\nfactorScores <- data.frame(lbc36no = dset_mod$lbc36no, Ig = factorScores$Ig, Sg = factorScores$Sg)\n\n# report Ns\ncbind(c(\"N intercepts included\", \"N intercepts excluded\", \"N slopes included\", \"N slopes excluded\"), as.numeric(c(length(which(is.na(factorScores$Ig) == F)), length(which(is.na(factorScores$Ig) == T)), length(which(is.na(factorScores$Sg) == F)), length(which(is.na(factorScores$Sg) == T))))) \n\n# write.table to dat\nwrite.table(factorScores, file = paste0(wd, \"/LBC1936_Cog_FactorScores.txt\"), quote = F, col.names = T, row.names = F, sep = \"\\t\")\n```\n:::\n\n\n### Plot cognitive scores \n\n\n::: {.cell fig.dim='[16,20]'}\n\n```{.r .cell-code}\n# consistent variable names\nnames(data) <- gsub(\"vpa_tot\", \"vpatot\", colnames(data)) \n\n# plot the different cognitive tests\np_matreas <- plot_long(dat = data, id.var = \"lbc36no\", var = \"matreas\")+\n  xlab(\"Wave\")+\n  ylab(\"Matrix reasoning\\n(# correct)\\n'matreas'\")\n\np_blkdes <- plot_long(dat = data, id.var = \"lbc36no\", var = \"blkdes\")+\n  xlab(\"Wave\")+\n  ylab(\"Block design\\n(# correct)\\n'blkdes'\")\n\np_spantot <- plot_long(dat = data, id.var = \"lbc36no\", var = \"spantot\")+\n  xlab(\"Wave\")+\n  ylab(\"Spatial span\\n(# correct)\\n'spantot'\")\n\np_vpatotal <- plot_long(dat = data, id.var = \"lbc36no\", var = \"vpatotal\")+\n  xlab(\"Wave\")+\n  ylab(\"Verbal paired associations\\n(# correct)\\n'vpatotal'\")\n\np__lmtotal <- plot_long(dat = data, id.var = \"lbc36no\", var = \"lmtotal\")+\n  xlab(\"Wave\")+\n  ylab(\"Logical memory\\n(# details recalled)\\n'lmtotal'\")\n\np_digback <- plot_long(dat = data, id.var = \"lbc36no\", var = \"digback\")+\n  xlab(\"Wave\")+\n  ylab(\"Digit span backwards\\n(max length)\\n'digback'\")\n\np_nart <- plot_long(dat = data, id.var = \"lbc36no\", var = \"nart\")+\n  xlab(\"Wave\")+\n  ylab(\"National Adult\\nReading Test\\n(# correct) 'nart'\")\n\np_wtar <- plot_long(dat = data, id.var = \"lbc36no\", var = \"wtar\")+\n  xlab(\"Wave\")+\n  ylab(\"Wechsler Test of\\nAdult Reading\\n(# correct) 'wtar'\")\n\np_vftot <- plot_long(dat = data, id.var = \"lbc36no\", var = \"vftot\")+\n  xlab(\"Wave\")+\n  ylab(\"Verbal fluency\\n(# correct)\\n'vftot'\")\n\np_digsym<- plot_long(dat = data, id.var = \"lbc36no\", var = \"digsym\")+\n  xlab(\"Wave\")+\n  ylab(\"Digit-symbol substitution\\n(# matched pairs)\\n'digsym'\")\n\np_symsear <- plot_long(dat = data, id.var = \"lbc36no\", var = \"symsear\")+\n  xlab(\"Wave\")+\n  ylab(\"Symbol Search\\n(# correct)\\n'symsear'\")\n\np_crtmean <- plot_long(dat = data, id.var = \"lbc36no\", var = \"crtmean\")+\n  xlab(\"Wave\")+\n  ylab(\"Four-choice reaction\\ntime (ms)\\n'crtmean'\")\n\np_ittotal <- plot_long(dat = data, id.var = \"lbc36no\", var = \"ittotal\")+\n  xlab(\"Wave\")+\n  ylab(\"Inspection time\\n(# correct)\\n'ittotal'\")\n\n# arrange all plots\nplots <- ls(pattern=\"p_\")\nplot_list <- list()\n\nfor(i in plots){\n  plot_list[[i]] <- get(i)\n}\n\n# arrange all plots\nggarrange(plotlist = plot_list, ncol = 3, nrow = 5)\n```\n:::\n\n\n\n\n## Clinically-ascertained all-cause dementia \n\nThis variable is available through the LBC1936 and was derived as described [here](https://link.springer.com/article/10.1186/s12888-023-04797-7).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# read data\nfile = foreign::read.spss(paste0(target, \"/LBC1936_EarlyAccessDementiaAscertainment_AF_07DEC2023.sav\"), to.data.frame=T)\n\n# remove redundant spacing \nfor(i in names(file)){\n  file[,i] = stringr::str_remove_all(file[,i], pattern = \" \")\n}\n\n# remove NA coding\nfile[file == -999] <- NA\nfile[file == -888] <- NA\n\n# no participants with all missing data\n# which(is.na(file$dement_w1))\n\ntable(file$dementia_code)\n#  Dementia NoDementia \n#       118        747 \n\nfile$dementia_code[which(file$dementia_code == \"Dementia\")] <- 1\nfile$dementia_code[which(file$dementia_code == \"NoDementia\")] <- 0\n\n# binary variable as factor\nfile$dementia_code = as.factor(file$dementia_code)\n\n# write.table to dat\nwrite.table(file[,c(\"lbc36no\", \"dementia_code\")], file = paste0(wd, \"/LBC1936_dementia.txt\"), quote = F, col.names = T, row.names = F, sep = \"\\t\")\n```\n:::\n\n\n\n## APOE status\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# read data\nfile = foreign::read.spss(paste0(target, \"/LBC1936_BrainAtrophy_AF_07NOV2023.sav\"), to.data.frame=T)\n\ntable(file[,grep(\"APOE\", names(file))])\n#APOEgenotype\n#APOEe4               ?     e2/e2 e2/e3 e2/e4 e3/e3 e3/e4 e4/e4\n#No e4 allele     0     0     5   120     0   597     0     0\n#e4 allele        0     0     0     0    23     0   262    21\n\n\ntable(file$APOEe4)\n#No e4 allele    e4 allele \n#722          306\n\n# recode\nfile$APOEe4 = as.numeric(file$APOEe4)-1\n\n# make factor\nfile$APOEe4 = as.factor(file$APOEe4)\n\n# write.table to dat\nwrite.table(file[,c(\"lbc36no\", \"APOEe4\")], file = paste0(wd, \"/LBC1936_APOEe4.txt\"), quote = F, col.names = T, row.names = F, sep = \"\\t\")\n```\n:::\n\n\n\n## Frailty\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# names(file)[grep(\"Frailty\", names(file))]\nfrailty = file[,c(1,grep(\"Frailty\", names(file)))]\n\n# model slopes and intercepts\nfrailModel <- '\n          i =~ 1*FrailtyIndex_W1 + 1*FrailtyIndex_W2 + 1*FrailtyIndex_W3 + 1*FrailtyIndex_W4 + 1*FrailtyIndex_W5\n          s =~ 0*FrailtyIndex_W1 + 2.98*FrailtyIndex_W2 + 6.75*FrailtyIndex_W3 + 9.82*FrailtyIndex_W4 + 12.54*FrailtyIndex_W5\n          '\n\nfit = growth(frailModel, frailty, missing = \"ml.x\")\nsummary(fit, standardized = T)\n\n# estimate individual-level values for slope and intercept\nfrailtyPred = as.data.frame(lavPredict(fit,\n                 type =\"lv\", \n                 method = \"regression\", \n                 label = TRUE))\n\n# merge with participant ID\nfrailtyPred = cbind(frailty$lbc36no,frailtyPred)\nnames(frailtyPred) = c(\"lbc36no\", \"iFrail\",\"sFrail\")\n\n# save\nwrite.table(frailtyPred, file = paste0(wd, \"/LBC1936_Frailty.txt\"), quote = F, col.names = T, row.names = F, sep = \"\\t\")\n```\n:::\n\n\n### Plot frailty\n\n\n::: {.cell}\n\n```{.r .cell-code}\n##### visualise \nfrailty = file[,c(1,grep(\"Frailty\", names(file)))]\n# unify naming (otherwise plotting function won't work)\nnames(frailty) = str_replace(names(frailty), pattern= \"_W\", replacement = \"_w\")\n\n# find people who were tested at one wave only to exclude them from slope prediction\nonewave = which(rowSums(is.na(frailty[,grep(\"_W\", names(frailty))])) == 4)\n\n# find people who were not tested at wave 1 to exclude from intercept\nNotWave1 = which(is.na(frailty$FrailtyIndex_W1))\n\n# set slopes for participants who were only tested at one wave to NA\nfrailtyPred$s[onewave] <- NA \n# set intercepts for participants who were not tested at w1 to NA \nfrailtyPred$i[NotWave1] <- NA \n\n##### inspect trajectory\n\np_frailty <- plot_long(dat = frailty, id.var = \"lbc36no\", var = \"FrailtyIndex\")+\n  xlab(\"Wave\")+\n  ylab(\"Frailty index\")\n\np_frailty\n```\n:::\n\n\n## Diabetes\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# no participants with all missing data\n# which(is.na(file$diab_w1))\n\n# first of all, all No\nfile$diab_life = 0\nfile$diab_life[which(file$diab_w1 == \"Yes\" | \n                         file$diab_w2 == \"Yes\" |\n                         file$diab_w3 == \"Yes\" | \n                         file$diab_w4 == \"Yes\" | \n                         file$diab_w5 == \"Yes\")] = 1\n\n# remove those with all missing\nallMissing = which(rowSums(!is.na(file[,grep(\"diab_w\", names(file))])) == 0) \nif(length(allMissing) != 0){file$diab_life[allMissing] = NA}\n\n\ntable(file$diab_life)\n# No Yes \n# 942 149 \n\nfile$diab_life = as.factor(file$diab_life)\n\n# write.table to dat\nwrite.table(file[,c(\"lbc36no\", \"diab_life\")], file = paste0(wd, \"/LBC1936_diabetes.txt\"), quote = F, col.names = T, row.names = F, sep = \"\\t\")\n```\n:::\n\n\n## Hypertension\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# no participants with all missing data\n# which(is.na(file$hibp_w1))\n\n# first of all, all No\nfile$hypertension_life = 0\nfile$hypertension_life[which(file$hibp_w1 == \"Yes\" | \n                       file$hibp_w2 == \"Yes\" |\n                       file$hibp_w3 == \"Yes\" | \n                       file$hibp_w4 == \"Yes\" | \n                       file$hibp_w5 == \"Yes\")] = 1\n\n# remove those with all missing\nallMissing = which(rowSums(!is.na(file[,grep(\"hibp_w\", names(file))])) == 0) \nif(length(allMissing) != 0){file$hypertension_life[allMissing] = NA}\n\nfile$hypertension_life = as.factor(file$hypertension_life)\n\ntable(file$hypertension_life)\n# No Yes \n# 448 643 \n\n# write.table to dat\nwrite.table(file[,c(\"lbc36no\", \"hypertension_life\")], file = paste0(wd, \"/LBC1936_hypertension.txt\"), quote = F, col.names = T, row.names = F, sep = \"\\t\")\n```\n:::\n\n\n## Smoking (packyears)\n\nNumber of cigarettes per year x years of smoking / 20 (pack size) \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# keep variables of interest\nsmok = file[,c(1,grep(\"smo\", names(file)))]\n\n# wave 1 has 465 more non-missing values than wave 2 \n# all.equal(smok$smokagestop_w1, smok$smokagestop_w2)\n\n# keep only first wave\nsmok = smok[,c(1,grep(\"_w1\", names(smok)))]\n\n# identify participants who have starting year but not end year as they must still be smokers\nsmok$smokagestop = ifelse(smok$smokcat_w1 == \"current smoker\", 70, smok$smokagestop_w1)\n\n# extract years of smoking (so far, regardless if they stopped smoking or not)\nsmok$yearsSmok = smok$smokagestop - smok$smokagestart_w1\n\n# two entries are smoknumcigs == 0 which would null the equation\n# one of those participants have indicates to be a current smoker and the other one to hae never smoked (but still gave starting age)\n# as I don't know how that came about, I have deleted these two data points\nsmok[which(smok$smoknumcigs_w1 == 0),] = NA\n\n# calculate packyears\nsmok$packyears = (smok$smoknumcigs_w1 * 365 * smok$yearsSmok)/20\n\n# null the never smokers\nsmok$packyears[which(smok$smokcat_w1 == \"never smoked\")] = 0\n\nhist(smok$packyears)\n\n# write.table to dat\nwrite.table(smok[,c(\"lbc36no\", \"packyears\")], file = paste0(wd, \"/LBC1936_packYears.txt\"), quote = F, col.names = T, row.names = F, sep = \"\\t\")\n```\n:::\n\n\n\n## Body mass index (BMI)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# names(file)[grep(\"bmi\", names(file))]\nbmi = file[,c(1,grep(\"bmi\", names(file)))]\n\n# recode missing\nbmi[bmi == -999] <- NA\n\n# model slopes and intercepts\nBMImodel <- '\n          i =~ 1*bmi_w1 + 1*bmi_w2 + 1*bmi_w3 + 1*bmi_w4 + 1*bmi_w5\n          s =~ 0*bmi_w1 + 2.98*bmi_w2 + 6.75*bmi_w3 + 9.82*bmi_w4 + 12.54*bmi_w5\n          '\n\nfit = growth(BMImodel, bmi, missing = \"ml.x\")\nsummary(fit, standardized = T)\n\n# estimate individual-level values for slope and intercept\nbmiPred = as.data.frame(lavPredict(fit,\n                 type =\"lv\", \n                 method = \"regression\", \n                 label = TRUE))\n\n# merge with participant ID\nbmiPred = cbind(bmi$lbc36no, bmiPred)\nnames(bmiPred) = c(\"lbc36no\", \"iBMI\", \"sBMI\")\n\n# write.table to dat\nwrite.table(bmiPred[,c(\"lbc36no\", \"iBMI\", \"sBMI\")], file = paste0(wd, \"/LBC1936_bmi.txt\"), quote = F, col.names = T, row.names = F, sep = \"\\t\")\n```\n:::\n\n\n### Plot BMI\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## visualise\nbmi = file[,c(1,grep(\"bmi\", names(file)))]\n\n# find people who were tested at one wave only to exclude them from slope prediction\nonewave = which(rowSums(is.na(bmi[,grep(\"_W\", names(bmi))])) == 4)\n\n# find people who were not tested at wave 1 to exclude from intercept\nNotWave1 = which(is.na(bmi$bmiIndex_W1))\n\n# set slopes for participants who were only tested at one wave to NA\nbmiPred$s[onewave] <- NA \n# set intercepts for participants who were not tested at w1 to NA \nbmiPred$i[NotWave1] <- NA \n\nsummary(bmiPred)\n\n# write.table to dat\nwrite.table(bmiPred, file = paste0(wd, \"/LBC1936_bmiFactorScores.txt\"), quote = F, col.names = T, row.names = F, sep = \"\\t\")\n\n##### inspect trajectory\nplot_long(dat = bmi, id.var = \"lbc36no\", var = \"bmi\")+\n  xlab(\"Wave\")+\n  ylab(\"bmi index\")\n```\n:::\n\n\n## Brain age\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# read file\nfile = as.data.frame(foreign::read.spss(paste0(target, \"/BrainAgeVia2p1_AF_07DEC2023.sav\"), to.file.frame=T))\n\n# remove ID info when waves are indicated in \"JC_BrainAge_ID\"\nfile$JC_BrainAge_ID = as.numeric(gsub(\".*_w\", \"\", file$JC_BrainAge_ID))\n\n# rename columns more intuitively\nnames(file)[which(names(file) == \"JC_BrainAge_ID\")] = \"wave\"\nnames(file)[which(names(file) == \"JCBA_brain_age_W2\")] = \"brainAgeEst\"\n\n# read in age info \nageInfo = as.data.frame(foreign::read.spss(\"LBC1936_BrainAtrophy_AF_07NOV2023.sav\"))\n# strange name formatting\nageInfo$lbc36no =gsub(\" \", \"\", ageInfo$lbc36no)\n\n# merge info \nfile = merge(file, ageInfo[, c(\"lbc36no\", \"agedays_w2\")], by = \"lbc36no\")\n\n# get age in days in years to match estimated brain age\nfile$agedays_w2 = file$agedays_w2/365\n\n# get brain age gap which is the difference between brain age and chronological age\n# positive value should mean the particpant has a healthier looking brain tthan expected given their age \n# negative value should mean the participant has an unhealthier looking brain than expected\nfile$brainAge = file$agedays_w2 - file$brainAgeEst\n\n# summary stats\nsummary(file$brainAge)\nhist(file$brainAge)\n\n# write.table to dat\nwrite.table(file[,c(\"lbc36no\",\"brainAge\")], file = paste0(wd, \"/LBC1936_brainAge.txt\"), quote = F, col.names = T, row.names = F, sep = \"\\t\")\n```\n:::\n\n\n## Stroke\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# set path to where data was saved \ntarget=\"/CCACE_Shared/Anna_F/BrainAtrophy/data\"\n\n# read data\nfile = foreign::read.spss(paste0(target, \"/LBC1936_BrainAtrophy_AF_07NOV2023.sav\"), to.data.frame=T)\n\n# names(file)[grep(\"stroke\", names(file))]\n\n# first of all, all No\nfile$strokemask_life = 0\n# identify people who had no scan\nfile$strokemask_life[which(is.na(file$stroke_mask_w2) & \n                             is.na(file$stroke_mask_w3) &\n                             is.na(file$stroke_mask_w4) &\n                             is.na(file$stroke_mask_w5))] = NA\n\nfile$strokemask_life[which(file$stroke_mask_w2 == \"Yes Stroke Mask - Had scan\" | \n                               file$stroke_mask_w3 == \"Yes Stroke Mask - Had scan\" |\n                               file$stroke_mask_w4 == \"Yes Stroke Mask - Had scan\" | \n                               file$stroke_mask_w5 == \"Yes Stroke Mask - Had scan\")] = 1\n\n\nfile$strokemask_life <- as.factor(file$strokemask_life)\n\ntable(file$strokemask_life)\n# No Yes \n# 544 156 \n\n# write.table to dat\nwrite.table(file[,c(\"lbc36no\",\"strokemask_life\")], file = paste0(wd, \"/LBC1936_strokemask.txt\"), quote = F, col.names = T, row.names = F, sep = \"\\t\")\n```\n:::\n\n\n\n## Visual rating scales\n\nNote we did not have access to rating scales at wave 5, only wave 3.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# set path to where data was saved \ntarget=\"/CCACE_Shared/Anna_F/BrainAtrophy/data\"\n\n# read data\nfile = foreign::read.spss(paste0(target, \"/LBC1936_BrainAtrophy_AtrophyRating_AF_03MAY2024.sav\"), to.data.frame=T)\n\n# strange name formatting\nfile$lbc36no = gsub(\" \", \"\", file$lbc36no)\n\n# atrophy deep and superficial are in great agreement (only 80 participants where they are not identical)\nsum(file$atrophy_deep_w3 == file$atrophy_superficial_w3, na.rm=T)\n\n# recode so the scales are numeric\nfile$atrophy_deep_recoded = NA\nfile$atrophy_deep_recoded[grepl(\"(<25th)\", file$atrophy_deep_w3)] = 1\nfile$atrophy_deep_recoded[grepl(\"(25-50th)\", file$atrophy_deep_w3)] = 2\nfile$atrophy_deep_recoded[grepl(\"(50-75th)\", file$atrophy_deep_w3)] = 3\nfile$atrophy_deep_recoded[grepl(\"(75-95th)\", file$atrophy_deep_w3)] = 4\nfile$atrophy_deep_recoded[grepl(\"(>95th)\", file$atrophy_deep_w3)] = 5\nfile$atrophy_deep_recoded[grepl(\"(>>5)\", file$atrophy_deep_w3)] = 6\n\n# same for atrophy superficial\nfile$atrophy_superficial_recoded = NA\nfile$atrophy_superficial_recoded[grepl(\"(<25th)\", file$atrophy_superficial_w3)] = 1\nfile$atrophy_superficial_recoded[grepl(\"(25-50th)\", file$atrophy_superficial_w3)] = 2\nfile$atrophy_superficial_recoded[grepl(\"(50-75th)\", file$atrophy_superficial_w3)] = 3\nfile$atrophy_superficial_recoded[grepl(\"(75-95th)\", file$atrophy_superficial_w3)] = 4\nfile$atrophy_superficial_recoded[grepl(\"(>95th)\", file$atrophy_superficial_w3)] = 5\nfile$atrophy_superficial_recoded[grepl(\"(>>5)\", file$atrophy_superficial_w3)] = 6\n\n\n# write.table to dat\nwrite.table(file[,c(\"lbc36no\",\"atrophy_deep_recoded\",\"atrophy_superficial_recoded\")], file = paste0(target, \"/LBC1936_atrophyScales.txt\"), quote = F, col.names = T, row.names = F, sep = \"\\t\")\n```\n:::\n\n\n## Age\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# read data\nfile = foreign::read.spss(paste0(target, \"/LBC1936_BrainAtrophy_AF_07NOV2023.sav\"), to.data.frame=T)\n\n# strange name formatting\nfile$lbc36no = gsub(\" \", \"\", file$lbc36no)\n\n# keep age variable for first neuroimaging visit\nfile = file[,c(\"lbc36no\", \"ageMRI_w2\")]\n\n# save file\nwrite.table(file, file = paste0(target, \"/LBC1936_age_w2.txt\"), quote = F, col.names = T, row.names = F, sep = \"\\t\")\n```\n:::\n\n\n## Merge all LBC variables into one file\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# it makes it more straightforward to conduct the following analyses if I merge all phenotypes into one file\n# Step 1: Read all phenotypes in\n# Step 2: Merge them\n# Step 3: Save\n\n# cognitive ability\ncog = fread(paste0(wd, \"/LBC1936_Cog_FactorScores.txt\"))\n# dementia\ndement = fread(paste0(wd, \"/LBC1936_dementia.txt\"))\n# APOE\nAPOE = fread(paste0(wd, \"/LBC1936_APOEe4.txt\"))\n# Frailty\nfrail = fread(paste0(wd, \"/LBC1936_Frailty.txt\"))\n# diabetes\ndiab = fread(paste0(wd, \"/LBC1936_diabetes.txt\"))\n# hyp\nhyp = fread(paste0(wd, \"/LBC1936_hypertension.txt\"))\n# packyears\nsmok = fread(paste0(wd, \"/LBC1936_packYears.txt\"))\n# bmi\nbmi = fread(paste0(wd, \"/LBC1936_bmi.txt\"))\n# brain age\nBrainAge = fread(paste0(wd, \"/LBC1936_brainAge.txt\"))\n# stroke\nstroke = fread(paste0(wd, \"/LBC1936_strokemask.txt\"))\n# atrophy scales\natrophy = fread(paste0(wd, \"/LBC1936_atrophyScales.txt\"))\n# age\nage = fread(paste0(wd, \"/LBC1936_age_w2.txt\"))\n\n# merge data\nDatList = list(cog, dement, APOE, frail, diab, hyp, smok, bmi, BrainAge, stroke, atrophy, age)\nLBC_merged = Reduce(function(x,y) merge(x, y, by = \"lbc36no\", all = T), DatList)\n\n# remove empty rows\nLBC_merged = LBC_merged[-which(rowSums(!is.na(LBC_merged)) == 0),]\n\n# choose prettier names\nnames(LBC_merged) = c(\"lbc36no\",\"iCog\",\"sCog\",\"dementia\",\"APOEe4\",\"iFrailty\",\"sFrailty\",\"diabetes\",\"hypertension\",\"packyears\",\"iBMI\",\"sBMI\",\"BrainAge\",\"Stroke\",\"VisualAtrophyDeep\",\"VisualAtrophySuperficial\",\"ageMRI_w2\")\n\n# remove empty rows\nLBC_merged = LBC_merged[rowSums(is.na(LBC_merged)) != ncol(LBC_merged),]\n\n# write\nfwrite(LBC_merged, file = paste0(wd, \"/LBC1936_allPheno.txt\"), col.names = T, row.names = F, quote = F, na = NA, sep = \"\\t\")\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}