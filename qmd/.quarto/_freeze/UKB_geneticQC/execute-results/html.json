{
  "hash": "25c9d93b8e7ca375ea3fab39dfb8cd69",
  "result": {
    "markdown": "---\ntitle: \"UK Biobank: Genetic data cleaning\"\nformat: \n  html:\n    code-fold: true\nauthor: \"Anna Elisabeth Furtjes\"\ndate: \"12 February 2025\"\noutput: html\ndoi: 10.1101/2024.11.06.622274\n---\n\n\n------------------------------------------------------------------------\n\n\n\n\n\n## Initial sample-level quality control (QC)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Initial sample QC (R code)\n## 1. Do 4 means clustering to get europeans only\n## 2. Get variable with het & miss info\n## 3. Generate a keep list \n\n# load packages\nlibrary(data.table)\nlibrary(ggplot2)\n\n# get all participant IDs that have neuroimaging data (this is the phenotypic data prepared as GWAS input)\nneuro = fread(\"UKB_CrossNeuroIDP.txt\", select = 1:2)\n\n# get PC1:40 data using ukbtools package\nukb_sqc=fread(\"UKBB_500K/Decrypted/ukb_sqc_v2.txt\")\n\n# https://kenhanscombe.github.io/ukbtools/articles/explore-ukb-data.html\n# With ukb_sqc_v2.txt read into the dataframe my_sqc_data\nukb_sqc <- ukb_gen_sqc_names(ukb_sqc)\n\n# genetic file is organised in the same order as application-specific ref fam file\nref = fread(\"UKBB_500K/Decrypted/ukb1027_cal_chr1_v2_s488374.fam\")\n\n# merge ref file to get IDs\nukb_sqc = cbind(ref[,c(\"V1\")], ukb_sqc)\n# re-name ID column that comes from the fam file\nnames(ukb_sqc)[which(names(ukb_sqc) == \"V1\")] = \"IID\"\n\n###############################\n# Get variable with het & miss info\n###############################\ntable(ukb_sqc$het_missing_outliers)\n\nprint(paste(\"We lose \",nrow(neuro)-sum(neuro$IID %in% ukb_sqc$IID), \" participants from the neuroimaging data set because these IDs are not available in the genetic data. (N = \", sum(neuro$IID %in% ukb_sqc$IID),\")\"))\n#[1] \"We lose  1220  participants from the neuroimaging data set because these IDs are not available in the genetic data. (N =  45598 )\"\n\nneuro = merge(neuro, ukb_sqc[,c(\"IID\",\"het_missing_outliers\")], by = \"IID\")\n\nprint(paste(\"We lose \", sum(neuro$het_missing_outliers == 1),\" participants because they were outliers in heterozygosity and missinggness. N = \", sum(neuro$het_missing_outliers == 0), \"\"))\n#[1] \"We lose  83  participants because they were outliers in heterozygosity and missinggness. N =  45515 \"\n\n# exclude particpants that were labeled as outliers by UKB core team\nneuro = neuro[which(neuro$het_missing_outlier == 0),]\n\n################################\n# do 4 means clustering\n################################\n##Read in PCs, remove NAs, rename\n#PCs<-fread(args[1], data.table=F)\ncolNames = c(\"V1\", paste0(\"pc\",1:40))\nPCs <- ukb_sqc[, ..colNames]\nPCs<-na.omit(PCs)\nnames(PCs)<-c(\"ID\",\"PC.1\",\"PC.2\",\"PC.3\",\"PC.4\",\"PC.5\",\"PC.6\",\"PC.7\",\"PC.8\",\"PC.9\",\"PC.10\",\"PC.11\",\"PC.12\",\"PC.13\",\"PC.14\",\"PC.15\",\"PC.16\",\"PC.17\",\"PC.18\",\"PC.19\",\"PC.20\",\"PC.21\",\"PC.22\",\"PC.23\",\"PC.24\",\"PC.25\",\"PC.26\",\"PC.27\",\"PC.28\",\"PC.29\",\"PC.30\",\"PC.31\",\"PC.32\",\"PC.33\",\"PC.34\",\"PC.35\",\"PC.36\",\"PC.37\",\"PC.38\",\"PC.39\",\"PC.40\")\n\n##Set seed\nset.seed(1204688)\n\n##K means clustering on each PC\nK_MEAN <- 4\n\nPC1_K<-kmeans(PCs$PC.1, K_MEAN)\nPC2_K<-kmeans(PCs$PC.2, K_MEAN)\n\n##Add clusters to PC dataframe\nPCs$PC1.Cluster<-PC1_K$cluster\nPCs$PC2.Cluster<-PC2_K$cluster\nPCs$Clusters<-as.factor(paste(PC1_K$cluster,PC2_K$cluster,sep=\".\"))\n\n##WWE group is the majority\n\nMAX_PC1<-ifelse(match(max(table(PCs$PC1.Cluster, PCs$PC2.Cluster)), table(PCs$PC1.Cluster, PCs$PC2.Cluster)) %% K_MEAN == 0, K_MEAN, match(max(table(PCs$PC1.Cluster, PCs$PC2.Cluster)), table(PCs$PC1.Cluster, PCs$PC2.Cluster)) %% K_MEAN)\n\nMAX_PC2<-ceiling(match(max(table(PCs$PC1.Cluster, PCs$PC2.Cluster)), table(PCs$PC1.Cluster, PCs$PC2.Cluster))/K_MEAN)\n\n##Make lists of WWE IDs\nWWE<-as.data.frame(PCs[PCs$PC1.Cluster == MAX_PC1 & PCs$PC2.Cluster == MAX_PC2,1])\nnames(WWE)<-\"ID\"\n\n## Get overlap with participants of interest\nWWE = WWE[WWE$ID %in% neuro$FID,]\nprint(paste(\"We excluded \", nrow(neuro)-length(WWE),\"participants based on 4-means clustering. N = \", length(WWE), \"\"))\n#[1] \"We excluded  1332 participants based on 4-means clustering. N =  44183 \"\n\nWWE_PLINK<-as.data.frame(cbind(WWE,WWE))\nnames(WWE_PLINK)<-c(\"FID\",\"IID\")\n\n##Write to file\nwrite.table(WWE_PLINK, file=paste0(out,\"/ukb_neuroimaging_4MeansClustering_excl_het_miss.txt\"), row.names=F, col.names=T, quote = F)\n\n##Plot\npdf(paste0(out,\"/ukb_neuroimaging_4MeansClustering\", \".pdf\"))\nwith(PCs, print(qplot(PC.1, PC.2, colour=Clusters)))\ndev.off()\n\n\n#############################\n### check how many of those participants now have self-reported different ancestry\n#############################\n# this function identifies the path to the most recent download file on our server\ngetFieldLoc = function(path = path, fileName = fileName, fieldID = fieldID){\n  library(stringr)\n  # read all the field.ukb files\n  files_to_read = list.files(\n    path = path,\n    pattern = fileName,\n    recursive = T,\n    full.names = T\n  )\n  # read all files\n  dat = lapply(files_to_read, fread)\n  names(dat) = files_to_read\n  \n  # search for field ID of interest \n  candidates = names(dat)[grep(fieldID, dat)]\n  # figure out which one is from the most recent file (i.e., highest number)\n  candidates = str_remove(candidates, paste0(path, \"/\"))\n  candidates = str_remove(candidates, paste0(\"/\", fileName))\n  candidates = unique(as.numeric(sapply(str_extract_all(candidates, \"\\\\d+\"), tail , 1)))\n  most_recent = max(candidates, na.rm =T)\n  \n  return(paste0(path, most_recent))\n}\n\npath1 = getFieldLoc(path = path, \n            fileName = \"fields.ukb\", \n            fieldID = 21000)\n\nfileID = list.files(pat=path1,pattern=\"csv\")\n# read in file\nfile = fread(paste0(path1, \"/\", fileID))\n# file doesnt like column names that start with number and it doesnt like -\nnames(file) = paste0(\"f.\",names(file))\nnames(file) = gsub(\"-\", \"_\", names(file), fixed = T)\n\n# list columns of interest\nid=which(names(file) == \"f.eid\")\nCols = grep(\"f.21000\", names(file))\nfile = file[, c(..id, ..Cols)]\nnames(file)[which(names(file) == \"f.eid\")] = \"IID\"\n\n# merge file with neuro but only keep the IDs available in neuro\nneuro1 = merge(neuro, file, by = \"IID\", all.x=T)\n\n# make a table for the remaining particpants to see what ethnicity they reported\ntable(neuro1$f.21000_0.0)\n\n# make variable that encodes European ancestry\nneuro1$European <- ifelse(neuro1$f.21000_0.0 == 1 | neuro1$f.21000_0.0 == 1001 | neuro1$f.21000_0.0 == 1002 | neuro1$f.21000_0.0 == 1003,1,0)\n\nprint(paste(\"We're losing \", sum(neuro1$European == 0, na.rm=T),\" participants because they self-reported to be non-European.\",sum(is.na(neuro1$European)),\"are missing this info and will also be excluded. N remaining = \", sum(neuro1$European ==1, na.rm=T)))\n#[1] \"We're losing  1470  participants because they self-reported to be non-European. 9 are missing this info and will also be excluded. N remaining =  44036\"\n\n# delete non-European\nneuro1 = neuro1[which(neuro1$European == 1),]\n\nwrite.table(neuro1, file=paste0(out,\"/ukb_neuroimaging_4MeansClustering_excl_het_missEUR.txt\"), row.names=F, col.names=T, quote = F)\n\n##### At this point, we now have a list of IDs saved in ukb_neuroimaging_4MeansClustering_excl_het_miss.txt that are:\n# People with neuroimaging data\n# Have genetic data\n# Have not been labeled unusual by the UKB core team for missingness and heterozygosity\n# Have been included based on 4 means clustering\n# Have self-reported that they are of European descent\n```\n:::\n\n\n## Format genetic data \n\n\n::: {.cell}\n\n```{.bash .cell-code}\n##########################################################################################################\n# Step 0: Only include participants with neuroimaging data \n## this set of individuals will already exclude non-Europeans (PCs and self-report)\n## extreme scores on hetezygosity and missingness (see above)\n\n# copy bim bed and fam files to get consistent naming across bim and bed files\n## bed files\nfor CHR in {1..22}\ndo\ncp ${sourceBED}/ukb_cal_chr${CHR}_v2.bed ${target}/ukb_chr${CHR}_v2.bed\ndone\n## bim files\nfor CHR in {1..22}\ndo\ncp ${sourceBIM}/ukb_snp_chr${CHR}_v2.bim ${target}/ukb_chr${CHR}_v2.bim\ndone\n## fam file\ncp /GWAS_Source/UB_BB/UKBB_500K/Decrypted/ukb1027_cal_chr1_v2_s488374.fam ${target}/ukb_v2.fam\n\n# do fam file for each chromosome\nfor CHR in {1..22}\ndo\ncp ${target}/ukb_v2.fam ${target}/ukb_chr${CHR}_v2.fam\ndone\n\n## put data from each chromosome together into one bim, bed and fam file\n## and filter participants of interest\ncd $target\nphenoIDs=\"/CCACE_Shared/Anna_F/BrainAtrophy/data/geneticQC/ukb_neuroimaging_4MeansClustering_excl_het_missEUR.txt\"\n\nplink19 \\\n--merge-list $target/allGenoFiles.txt \\\n--make-bed \\\n--keep $phenoIDs \\\n--out ukb_neuroimaging_reQC\n\n## starting out with 784256 variants and 488377 participants, that are getting cut down to the 44036 participants that survived cleaning above\n\n#################################################\n# I realised later that this is not including the sex-chromosomes which are needed for sex-check later (this merging back and forth could have been done in one step, but I am saving resources to not to it from scratch again)\n# Copy X, Y and XY chromosome info first\n## bed files\nfor CHR in X XY Y\ndo\ncp ${sourceBED}/ukb_cal_chr${CHR}_v2.bed ${target}/ukb_chr${CHR}_v2.bed\ndone\n## bim files\nfor CHR in X XY Y\ndo\ncp ${sourceBIM}/ukb_snp_chr${CHR}_v2.bim ${target}/ukb_chr${CHR}_v2.bim\ndone\n## fam file for each chromosome\nfor CHR in X XY Y\ndo\ncp ${target}/ukb_v2.fam ${target}/ukb_chr${CHR}_v2.fam\ndone\n\n## merge X, Y, XY files together\nplink19 \\\n--merge-list ${target}/allXYfiles.txt \\\n--make-bed \\\n--keep $phenoIDs \\\n--out ukb_neuroimaging_sexchrom\n\n# now merge sex chromosomes with other data\nplink19 \\\n--merge-list ${target}/allAuto_and_Sex.txt \\\n--make-bed \\\n--keep $phenoIDs \\\n--out ukb_neuroimaging_autosomal_sex_preQC\n\n## now altogether, we have 44036 partcicipants left, and 805161 variants \n\n```\n:::\n\n\n## Filter for missing genotype data and minor allele frequency\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Step 1: Get SNP-list based on geno filter\nplink19 \\\n--bed ${target}/ukb_neuroimaging_autosomal_sex_preQC.bed \\\n--bim ${target}/ukb_neuroimaging_autosomal_sex_preQC.bim \\\n--fam ${target}/ukb_neuroimaging_autosomal_sex_preQC.fam \\\n--geno 0.02 \\\n--write-snplist \\\n--out ${target}/ukb_neuroimaging_GENO0.02\n# removed 104462 variants, 700699 remaining\n# no participants removed (44036 remaining)\n\n## this creates a snplist that feeds into next step\n\n# Step 2: apply various cleaning steps to get ID list (.fam) to feed into relatedness analysis\nplink19 \\\n--bed ${target}/ukb_neuroimaging_autosomal_sex_preQC.bed \\\n--bim ${target}/ukb_neuroimaging_autosomal_sex_preQC.bim \\\n--fam ${target}/ukb_neuroimaging_autosomal_sex_preQC.fam \\\n--geno 0.02 \\\n--extract ukb_neuroimaging_GENO0.02.snplist \\\n--write-snplist \\\n--make-just-fam \\\n--freq --maf 0.01 \\\n--out ukb_neuroimaging_MAF0.01_GENO0.02_QA_EUR\n\n# this fam file still contains 44036 participants\n# MAF filter removed 103158 variants, 597541 remaining\n```\n:::\n\n\n## Remove related individuals\n\nOur server was incompatible with the greedyRelated software, which is why I use R package here instead that runs the same analysis.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ukbtools)\nlibrary(data.table)\n# read in ukb relatedness file\nrel = fread(\"/UKBB_500K/Decrypted/ukb1027_rel_s488374.dat\")\nneuro = fread(\"ukb_neuroimaging_MAF0.01_GENO0.02_QA_EUR.fam\")\nsum(neuro$V1 %in% rel$ID1)\n# 7509\nsum(neuro$V1 %in% rel$ID2)\n# 7748\n\n# identify degree of relatedness \nukb_gen_rel_count(rel)\nukb_gen_rel_count(rel, plot = TRUE)\n\n# generate a list of participants to exclude based on relatedness\n# default cut-off > 0.0884 King coefficient corresponding to 3rd degree relatedness\nIDtoRemove = ukb_gen_samples_to_remove(rel, ukb_with_data = neuro$V1)\n\n# get PLINK format\nIDtoRemove<-as.data.frame(cbind(IDtoRemove,IDtoRemove))\nnames(IDtoRemove)<-c(\"FID\",\"IID\")\n\n# write table \nwrite.table(IDtoRemove, file=paste0(out,\"/IDstoRemove_related.txt\"), row.names=F, col.names=T, quote = F)\n# identified 622 IDs to remove due to relatedness\n```\n:::\n\n\nThis next step removes IDs of related individuals just identified in the previous step.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Step 5: Make fam ID list excluding related individuals\nrelatedIDs=\"/CCACE_Shared/Anna_F/BrainAtrophy/data/geneticQC/sourceCopy/IDstoRemove_related.txt\"\n\nplink19 \\\n--bed ${target}/ukb_neuroimaging_autosomal_sex_preQC.bed \\\n--bim ${target}/ukb_neuroimaging_autosomal_sex_preQC.bim \\\n--fam ${target}/ukb_neuroimaging_autosomal_sex_preQC.fam \\\n--geno 0.02 \\\n--extract ukb_neuroimaging_MAF0.01_GENO0.02_QA_EUR.snplist \\\n--keep ${target}/ukb_neuroimaging_MAF0.01_GENO0.02_QA_EUR.fam \\\n--write-snplist \\\n--make-just-fam \\\n--remove $relatedIDs \\\n--hardy --hwe 0.00000001 \\\n--out ${target}/ukb_neuroimaging_MAF0.01_GENO0.02_QA_EUR_HWE0.00000001\n\n# after removing 622 IDs due to relatedness, we have 43414 participants remaining\n# 84 variants removed due to missing genotype data\n# 11398 variants removed due to Hardy-Weinberg exact test (running this analysis throws a warning that \"--hwe observation counts vary by more than 10%, due to the X chromosome.  You may want to use a less stringent --hwe p-value threshold for X chromosome variants\" - however, without the X chromsome, this filter removes 11169 variants which is about the same so will leave this\n# 586058 variants remaining (which is about the same as in my previous study in another application)\n# the resulting .fam and .snplist files could now be fed into regenie, but first we'll also do sex-check\n```\n:::\n\n\n## Perform sex-check\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Step 6: Prune SNPs for sex-check\n# to do sex-check, we prune SNP data to be independent and exclude high LD regions\n# this is because patterns of LD will impair chromosome-specific tests of homozygosity\nawk -f ${target}/highLDregions4bim_b37.awk ${target}/ukb_neuroimaging_reQC.bim > ${target}/ukb_neuroimaging_High_LD_Regions_To_Exclude.txt\n# this file contains 28923 SNPs to exclude from sex-check analysis\n\nplink19 \\\n--bed ${target}/ukb_neuroimaging_autosomal_sex_preQC.bed \\\n--bim ${target}/ukb_neuroimaging_autosomal_sex_preQC.bim \\\n--fam ${target}/ukb_neuroimaging_autosomal_sex_preQC.fam \\\n--maf 0.05 \\\n--hwe 0.001 \\\n--geno 0.02 \\\n--thin-indiv-count 300 \\\n--indep-pairphase 200 100 0.2 \\\n--seed 1204688 \\\n--exclude ${target}/ukb_neuroimaging_High_LD_Regions_To_Exclude.txt \\\n--extract ${target}/ukb_neuroimaging_MAF0.01_GENO0.02_QA_EUR_HWE0.00000001.snplist \\\n--keep ${target}/ukb_neuroimaging_MAF0.01_GENO0.02_QA_EUR_HWE0.00000001.fam \\\n--out ${target}/ukb_neuroimaging_MAF0.01_GENO0.02_QA_EUR_HWE0.00000001_LD1_ALL\n\n\n\n# Step 7: Perform sex-check\n# F statistic used here is a function of teh deviation of the observed number of heterozygote variants from that expected under Hardy-Weinberg equilibrium\n# males should have F ~1 because all X chromosome variants are hemizygous and no heterozygotes can be observed\n# females should have lower values of F, distributed around 0 (but females with very high F stats have been observed)\n# this script shouldn't need a seperate --split-x analysis because the X chromosome's pseudoautosomal region is already presented as XY chromosome\n\nplink19 \\\n--bed ${target}/ukb_neuroimaging_autosomal_sex_preQC.bed \\\n--bim ${target}/ukb_neuroimaging_autosomal_sex_preQC.bim \\\n--fam ${target}/ukb_neuroimaging_autosomal_sex_preQC.fam \\\n--check-sex \\\n--keep ${target}/ukb_neuroimaging_MAF0.01_GENO0.02_QA_EUR_HWE0.00000001.fam \\\n--extract ${target}/ukb_neuroimaging_MAF0.01_GENO0.02_QA_EUR_HWE0.00000001_LD1_ALL.prune.in \\\n--out ${target}/ukb_neuroimaging_MAF0.01_GENO0.02_QA_EUR_HWE0.00000001_PRUNE_SEX\n```\n:::\n\n\n\n### Remove individuals that did not pass sex-check\n\n::: {.cell}\n\n```{.r .cell-code}\n### Extract participants that have been labeled as PROBLEM\nR\nlibrary(data.table)\ndat=fread(\"ukb_neuroimaging_MAF0.01_GENO0.02_QA_EUR_HWE0.00000001_PRUNE_SEX.sexcheck\")\n\nIDstoRemove=dat[which(dat$STATUS == \"PROBLEM\"),c(\"FID\",\"IID\")]\n# 22 \nwrite.table(IDstoRemove, file=paste0(out,\"/sexCheck_toRemove.txt\"), row.names=F, col.names=T, quote = F)\n```\n:::\n\n\n## Generate final .fam and .snplist files \n\n\n::: {.cell}\n\n```{.bash .cell-code}\n## Step 8: Generate final .fam and .snplist to feed into regenie (excluding failed sex checks)\nplink19 \\\n--bed ${target}/ukb_neuroimaging_autosomal_sex_preQC.bed \\\n--bim ${target}/ukb_neuroimaging_autosomal_sex_preQC.bim \\\n--fam ${target}/ukb_neuroimaging_autosomal_sex_preQC.fam \\\n--extract ${target}/ukb_neuroimaging_MAF0.01_GENO0.02_QA_EUR_HWE0.00000001.snplist \\\n--keep ${target}/ukb_neuroimaging_MAF0.01_GENO0.02_QA_EUR_HWE0.00000001.fam \\\n--write-snplist \\\n--make-just-fam \\\n--remove ${target}/sexCheck_toRemove.txt \\\n--out ${target}/ukb_neuroimaging_MAF0.01_GENO0.02_QA_EUR_HWE0.00000001_sexcheck\n```\n:::\n\n\n## Generate final bed file\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Step 9: Generate final bed files that will be used as input\nfinal=\"/CCACE_Shared/Anna_F/BrainAtrophy/data/geneticQC\"\n\nplink19 \\\n--bed ${target}/ukb_neuroimaging_autosomal_sex_preQC.bed \\\n--bim ${target}/ukb_neuroimaging_autosomal_sex_preQC.bim \\\n--fam ${target}/ukb_neuroimaging_autosomal_sex_preQC.fam \\\n--extract ${target}/ukb_neuroimaging_MAF0.01_GENO0.02_QA_EUR_HWE0.00000001_sexcheck.snplist \\\n--keep ${target}/ukb_neuroimaging_MAF0.01_GENO0.02_QA_EUR_HWE0.00000001_sexcheck.fam \\\n--chr 1-22 \\\n--make-bed \\\n--out ${final}/ukb_neuroimaging_brainAtrophy_GWASinput\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}