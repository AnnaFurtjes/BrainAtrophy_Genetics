{
  "hash": "1a84f0533bcaacd23af320c498911af7",
  "result": {
    "markdown": "---\ntitle: \"Descriptive statistics of LBA (Table S6)\"\nformat: \n  html:\n    code-fold: true\nauthor: \"Anna Elisabeth Furtjes\"\ndate: \"06 June 2025\"\noutput: html\ndoi: 10.1101/2024.11.06.622274\n---\n\n\n------------------------------------------------------------------------\n\n\n\n\n\n# Load packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(data.table)\n```\n:::\n\n\n\n# Define function\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# this only works for the correct naming of the variable names to diff, ratio and resid\ndescriptives = function(samples = c(\"HCP\", \"Share\", \"both\")){\n  # define statistics to include\n  stats = c(\"N\", \"TBV: Mean (SD)\", \"ICV: Mean (SD)\", \"cor(ICV,TBV)\",\n            \"*Difference score*\", \"Mean (SD)\", \"Median\", \"Range\", \"Variance\", \"Cut off\",\n            \"*Ratio score*\", \"Mean (SD)\", \"Median\", \"Range\", \"Variance\", \"Cut off\",\n            \"*Residual score*\", \"Mean (SD)\", \"Median\", \"Range\", \"Variance\", \"Cut off\")\n\n  # object to hold results\n  res = as.data.frame(matrix(ncol = length(samples)+1, nrow = length(stats)))\n  names(res) = c(\"Statistic\", samples)\n  res$Statistic = stats\n\n  for(i in samples){\n    # pull sample\n    dat = as.data.frame(get(i))\n\n    # N\n    N = sum(!is.na(dat$diff))\n    res[which(res$Statistic == \"N\"), which(names(res) == i)] = N\n\n    # TBV: Mean (SD)\n    mean = round(mean(dat$TBV, na.rm = T), digits = 2)\n    SD = signif(sd(dat$TBV, na.rm = T), digits = 2)\n    res[which(res$Statistic == \"TBV: Mean (SD)\"), which(names(res) == i)] = paste0(mean, \" (\", SD,\")\")\n\n    # ICV: Mean (SD)\n    mean = round(mean(dat$ICV, na.rm = T), digits = 2)\n    SD = signif(sd(dat$ICV, na.rm = T), digits = 2)\n    res[which(res$Statistic == \"ICV: Mean (SD)\"), which(names(res) == i)] = paste0(mean, \" (\", SD,\")\")\n\n    # ICV TBV correlation\n    cor = round(cor.test(dat$ICV, dat$TBV)$estimate, digits = 2)\n    res[which(res$Statistic == \"cor(ICV,TBV)\"), which(names(res) == i)] = cor\n\n    # Cycle through different scores\n    for(j in c(\"Difference\", \"Ratio\", \"Resid\")){\n        # determine variable that matches the right score\n        if(j == \"Difference\"){\n          VarName = \"diff\"\n        }else if(j == \"Ratio\"){\n          VarName = \"ratio\"\n        }else if(j == \"Resid\"){\n          VarName = \"resid\"\n        }\n\n        dat$var = dat[,VarName]\n\n        ### Calculate mean and SD\n        mean = round(mean(dat$var, na.rm=T), digits = 2)\n        sd = round(sd(dat$var, na.rm=T), digits = 2)\n        # find correct position in res to store result\n        index = grep(j, res$Statistic)\n        Cand = grep(\"Mean\", res$Statistic)\n        pos = Cand[which(Cand > index)][1]\n        # store mean result\n        res[pos, which(names(res) == i)] = paste0(mean, \" (\", sd, \")\")\n\n        ### Calculate median\n        median = round(median(dat$var, na.rm=T), digits = 2)\n        #store median result\n        Cand = grep(\"Median\", res$Statistic)\n        pos = Cand[which(Cand > index)][1]\n        res[pos, which(names(res) == i)] = median\n\n        ### Calculate range\n        min = round(min(dat$var, na.rm = T), digits = 2)\n        max = round(max(dat$var, na.rm = T), digits = 2)\n        # store results\n        Cand = grep(\"Range\", res$Statistic)\n        pos = Cand[which(Cand > index)][1]\n        res[pos, which(names(res) == i)] = paste0(min, \" to \", max)\n\n        ## Calculate variance\n        variance = round(var(dat$var, na.rm = T))\n        # store variance result\n        Cand = grep(\"Variance\", res$Statistic)\n        pos = Cand[which(Cand > index)][1]\n        res[pos, which(names(res) == i)] = variance\n\n        ### calculate cut-off\n        if(j == \"Difference\"){\n          cutOff = mean(dat$var, na.rm = T)+(2*sd(dat$var, na.rm = T))\n        }else{\n            cutOff = mean(dat$var, na.rm = T)-(2*sd(dat$var, na.rm = T))\n        }\n        # store results\n        Cand = grep(\"Cut\", res$Statistic)\n        pos = Cand[which(Cand > index)][1]\n        res[pos, which(names(res) == i)] = round(cutOff, digit = 1)\n    }\n  }\n\n  return(res)\n}\n```\n:::\n\n\n# Read in data \n\n## Generation Scotland (neuroimaging sample)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add in STRADL\nSTRADL = fread(paste0(STRADLdir, \"/\", list.files(path = STRADLdir, pattern = \"STRADL\")))\n\nnames(STRADL) = c(\"ID\", \"Age\", \"Sex\", \"TBV\", \"ICV\")\n\n# convert mm3 estimates to more intuitive cm3 estimates\nSTRADL$ICV = STRADL$ICV/1000\nSTRADL$TBV = STRADL$TBV/1000\n\n# estimate brain atrophy from single MRI scan\nSTRADL$diff = STRADL$ICV - STRADL$TBV\nSTRADL$ratio = STRADL$TBV / STRADL$ICV\n\n# remove participants with zero estimates for TBV and ICV (11 participants)\nSTRADL = STRADL[STRADL$TBV != 0,]\nSTRADL = STRADL[STRADL$ICV != 0,]\n\n\n# remove participants where ICV is smaller than TBV (excluding 45 participants)\nSTRADL = STRADL[which(STRADL$diff > 0),]\n\nmodel <- lm(TBV ~ ICV, data = STRADL)\nSTRADL$resid = resid(model)\n\n# standardise variables\nSTRADL$diff_stand = as.vector(scale(STRADL$diff))\nSTRADL$ratio_stand = as.vector(scale(STRADL$ratio))\nSTRADL$resid_stand = as.vector(scale(STRADL$resid))\n```\n:::\n\n\n## MRi-Share\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# read in MRi-Share\nShare = fread(paste0(out, \"/MRiShare_global_IDPs_BSAF2021.csv\"))\nShare$TBV = Share$SPM_GM_Volume + Share$SPM_WM_Volume\nShare = Share[,c(\"ID\", \"Age\", \"Sex\", \"eTIV\", \"TBV\")]\nnames(Share) = c(\"ID\", \"Age\", \"Sex\", \"ICV\", \"TBV\")\n\n# convert mm3 estimates to more intuitive cm3 estimates\nShare$ICV = Share$ICV/1000\nShare$TBV = Share$TBV/1000\n\n# estimate brain atrophy from single MRI scan\nShare$diff = Share$ICV - Share$TBV\nShare$ratio = Share$TBV / Share$ICV\n\nmodel <- lm(TBV ~ ICV, data = Share)\nShare$resid = resid(model)\n\n# save intercept value from the regression\nShareintercept = summary(model)$coefficients[1,1]\n\n# standardise variables\nShare$diff_stand = as.vector(scale(Share$diff))\nShare$ratio_stand = as.vector(scale(Share$ratio))\nShare$resid_stand = as.vector(scale(Share$resid))\n\n# sanity check\n#sum((Share$diff < 0))\n```\n:::\n\n\n\n## HCP\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# read in HCP data\nHCP = fread(paste0(out,\"/unrestricted_hcp_freesurfer.csv\"))\nHCP = HCP[,c(\"Subject\", \"Gender\", \"FS_InterCranial_Vol\", \"FS_BrainSeg_Vol_No_Vent\")]\nnames(HCP) = c(\"ID\", \"Sex\", \"ICV\", \"TBV\")\n\n# add age information\nHCPage = fread(paste0(out, \"/RESTRICTED_annafurtjes_12_14_2023_4_18_2.csv\"))\nnames(HCPage)[which(names(HCPage) == \"Subject\")] = \"ID\"\nnames(HCPage)[which(names(HCPage) == \"Age_in_Yrs\")] = \"Age\"\nHCP = merge(HCP, HCPage[,c(\"ID\",\"Age\")], by = \"ID\")\n\n# as outlined elsewhere, empirical investigations warrant to use an age cut-off of 31 years in this sample\nHCP = HCP[which(HCP$Age <= 31),]\n\n# convert mm3 estimates to more intuitive cm3 estimates\nHCP$ICV = HCP$ICV/1000\nHCP$TBV = HCP$TBV/1000\n\n# estimate brain atrophy from single MRI scan\nHCP$diff = HCP$ICV - HCP$TBV\nHCP$ratio = HCP$TBV / HCP$ICV\n\n# Quality control: \n#print(paste0(\"Some participants have negative difference scores and ratio scores > 1, which means that their ICV estimate is smaller than their TBV estimate. This must be an error as the skull always surrounds the brain. Those \", sum((HCP$diff < 0)),\" HCP participants were excluded from the data set.\"))\n\ndeletedHCP = sum(HCP$diff < 0)\n# delete those from data \nif(sum(HCP$diff < 0) != 0){HCP=HCP[-which(HCP$diff < 0),]}\n\n# estimate residual model\nmodel <- lm(TBV ~ ICV, data = HCP)\nHCP$resid = as.vector(resid(model, na.rm=T))\n\n  \n# standardise variables\nHCP$diff_stand = as.vector(scale(HCP$diff))\nHCP$ratio_stand = as.vector(scale(HCP$ratio))\nHCP$resid_stand = as.vector(scale(HCP$resid))\n```\n:::\n\n\n\n## LBC\n\nFirst and last neuroimaging visit as cleaned in [data preparation](LBC_neuro.html).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nLBC1 = fread(paste0(out, \"/LBC1936_crossNeuroWave1.txt\"))\nLBC4 = fread(paste0(out, \"/LBC1936_crossNeuroWave4.txt\"))\n```\n:::\n\n\n## UKB\n\nFirst and last neuroimaging visit as cleaned in [data preparation](UKB_neuro.html). Due to additional exclusions, this step re-calculates LBA residual to ensure zero correlation with ICV.\n\n\n### First neuroimaging visit\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# read in UKB neuro data\nUKB = fread(paste0(out, \"/UKB_neuroNoLongProcess.txt\"))\n\n# restrict to first neuroimaging visit (i.e., second visit altogether)\nUKB2 = UKB[UKB$wave == 2,]\n\n# cleaning extreme outliers (looks messy because only realised later that there were a few extreme outliers)\nUKB2 <- UKB2[which(UKB2$TBVdiff_2to3_stand < 10),]\nUKB2 <- UKB2[which(UKB2$TBVdiff_2to3_stand > (-10)),]\nUKB2 <- UKB2[which(UKB2$TBVratio_3to2_stand < 10),]\nUKB2 <- UKB2[which(UKB2$TBVratio_3to2_stand > (-10)),]\nUKB2 <- UKB2[which(UKB2$TBVresid_2to3_stand < 10),]\nUKB2 <- UKB2[which(UKB2$TBVresid_2to3_stand > (-10)),]\n\n# now that more participants were excluded, need to re-calculate the residual score\nmodel <- lm(TBV ~ ICV, data = UKB2)\nUKB2$resid = resid(model)\n\nUKB2$resid_stand <- as.vector(scale(UKB2$resid))\n\n# for some reason the mean for resid here is not zero ... don't know why - recalculate \nmodel <- lm(TBV ~ ICV, data = UKB2)\nUKB2$resid = resid(model)\n\nUKB2$resid_stand <- as.vector(scale(UKB2$resid))\n```\n:::\n\n\n### Second neuroimaging visit\n\n\n::: {.cell fig.dim='[8,7]'}\n\n```{.r .cell-code}\n# restrict to second neuroimaging visit (i.e., third visit altogether)\nUKB3 = UKB[UKB$wave == 3,]\n\n# cleaning extreme outliers (looks messy because only realised later that there were a few extreme outliers)\nUKB3 <- UKB3[which(UKB3$TBVdiff_2to3_stand < 10),]\nUKB3 <- UKB3[which(UKB3$TBVdiff_2to3_stand > (-10)),]\nUKB3 <- UKB3[which(UKB3$TBVratio_3to2_stand < 10),]\nUKB3 <- UKB3[which(UKB3$TBVratio_3to2_stand > (-10)),]\nUKB3 <- UKB3[which(UKB3$TBVresid_2to3_stand < 10),]\nUKB3 <- UKB3[which(UKB3$TBVresid_2to3_stand > (-10)),]\n\n# now that more participants were excluded, need to re-calculate the residual score\nmodel <- lm(TBV ~ ICV, data = UKB3)\nUKB3$resid = resid(model)\n\nUKB3$resid_stand <- as.vector(scale(UKB3$resid))\n```\n:::\n\n\n\n# Calculate descriptive stats\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndes = descriptives(samples = c(\"HCP\", \"Share\", \"UKB2\", \"UKB3\",\"LBC1\",\"LBC4\",\"STRADL\"))\n# remove cut-off values (artifact)\ndes = des[!grepl(\"Cut off\", des$Statistic),]\n# add ages\nHCPage = paste0(round(mean(HCP$Age)), \" (\",round(min(HCP$Age)), \"-\", round(max(HCP$Age)), \")\")\nShareage = paste0(round(mean(Share$Age)), \" (\",round(min(Share$Age)), \"-\", round(max(Share$Age)), \")\")\n# UKB\nUKB2$ageY = UKB2$age / 12\nUKB2age = paste0(round(mean(UKB2$ageY, na.rm=T)), \" (\",round(min(UKB2$ageY, na.rm=T)), \"-\", round(max(UKB2$ageY, na.rm=T)), \")\")\nUKB3$ageY = UKB3$age / 12\nUKB3age = paste0(round(mean(UKB3$ageY, na.rm=T)), \" (\",round(min(UKB3$ageY, na.rm=T)), \"-\", round(max(UKB3$ageY, na.rm=T)), \")\")\n\n# LBC\nage = fread(paste0(out, \"/LBC1936_allPheno.txt\"), select = c(\"lbc36no\",\"ageMRI_w2\"))\nLBC1 = merge(LBC1, age, by = \"lbc36no\")\nLBC1$ageMRI_w2 = LBC1$ageMRI_w2/365\nLBC1age = paste0(round(mean(LBC1$ageMRI_w2, na.rm=T)), \" (\",round(min(LBC1$ageMRI_w2, na.rm=T)), \"-\", round(max(LBC1$ageMRI_w2, na.rm=T)), \")\")\n\nLBC4age = \"82 (81-83)\"\n\n# STRADL\nSTRADLage = paste0(round(mean(STRADL$Age, na.rm=T)), \" (\",round(min(STRADL$Age, na.rm=T)), \"-\", round(max(STRADL$Age, na.rm=T)), \")\")\n\n# merge ages into data.frame\nres=rbind(des[1,], \n      c(\"Age in years\", HCPage, Shareage, UKB2age, UKB3age, LBC1age, LBC4age, STRADLage),\n      des[2:nrow(des),])\n\nknitr::kable(res, col.names = c(\"Statistic\",\"HCP\",\"MRi-Share\",\"UKB (first visit)\",\"UKB (second visit)\", \"LBC (first visit)\", \"LBC (fourth visit)\", \"STRADL\"))\n```\n\n::: {.cell-output-display}\n|   |Statistic          |HCP               |MRi-Share        |UKB (first visit) |UKB (second visit) |LBC (first visit) |LBC (fourth visit) |STRADL           |\n|:--|:------------------|:-----------------|:----------------|:-----------------|:------------------|:-----------------|:------------------|:----------------|\n|1  |N                  |800               |1831             |4674              |4674               |634               |286                |987              |\n|2  |Age in years       |27 (22-31)        |22 (18-35)       |62 (46-81)        |65 (49-82)         |73 (71-74)        |82 (81-83)         |60 (26-84)       |\n|22 |TBV: Mean (SD)     |1173.81 (120)     |1131.88 (100)    |1186.03 (110)     |1172.09 (110)      |1011.23 (97)      |935.48 (92)        |1101.77 (110)    |\n|3  |ICV: Mean (SD)     |1606.3 (170)      |1568.07 (140)    |1555.14 (150)     |1547.39 (150)      |1396.53 (140)     |1382.16 (150)      |1414.44 (210)    |\n|4  |cor(ICV,TBV)       |0.92              |0.96             |0.9               |0.89               |0.81              |0.75               |0.77             |\n|5  |*Difference score* |                  |                 |                  |                   |                  |                   |                 |\n|6  |Mean (SD)          |432.49 (79.34)    |436.18 (48.29)   |369.11 (69.41)    |375.3 (72.23)      |385.31 (86.88)    |446.68 (101.51)    |312.67 (144.35)  |\n|7  |Median             |437.57            |431.42           |363.11            |369.36             |382.43            |444.7              |353.16           |\n|8  |Range              |7.9 to 644.09     |298.44 to 630.19 |6.01 to 834.2     |120.02 to 739.69   |53.15 to 664.4    |100.58 to 882.81   |2.41 to 660.4    |\n|9  |Variance           |6295              |2332             |4818              |5217               |7549              |10304              |20836            |\n|11 |*Ratio score*      |                  |                 |                  |                   |                  |                   |                 |\n|12 |Mean (SD)          |0.73 (0.04)       |0.72 (0.02)      |0.76 (0.03)       |0.76 (0.03)        |0.73 (0.05)       |0.68 (0.05)        |0.79 (0.09)      |\n|13 |Median             |0.73              |0.72             |0.76              |0.76               |0.73              |0.68               |0.76             |\n|14 |Range              |0.65 to 0.99      |0.64 to 0.78     |0.6 to 1          |0.59 to 0.9        |0.6 to 0.95       |0.48 to 0.9        |0.62 to 1        |\n|15 |Variance           |0                 |0                |0                 |0                  |0                 |0                  |0                |\n|17 |*Residual score*   |                  |                 |                  |                   |                  |                   |                 |\n|18 |Mean (SD)          |0 (48.09)         |0 (30.06)        |0 (49.21)         |0 (50.64)          |0 (57.37)         |0 (61.08)          |0 (71.7)         |\n|19 |Median             |-7.2              |2.29             |0.99              |0.69               |0.46              |3.26               |-6.29            |\n|20 |Range              |-128.64 to 238.91 |-145.08 to 90.54 |-301.01 to 317.8  |-274.31 to 157.87  |-175.03 to 178.61 |-259.78 to 151.3   |-192.39 to 252.4 |\n|21 |Variance           |2313              |904              |2421              |2564               |3291              |3731               |5141             |\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}