{
  "hash": "6a9042168c32ce6e2549a8dea023c9d4",
  "result": {
    "markdown": "---\ntitle: \"Phenotypic associations with lifetime brain atrophy\"\nformat: \n  html:\n    code-fold: true\nauthor: \"Anna Elisabeth Furtjes\"\ndate: \"20 March 2025\"\noutput: html\ndoi: 10.1101/2024.11.06.622274\n---\n\n\n------------------------------------------------------------------------\n\n\n\n\n\nResults produced by the code below are described in the manuscript under section:\\\n**Measures of LBA predict brain atrophy rated by neuroradiological experts, as well as other ageing-related health traits such as frailty and cognitive ability**.\n\nThe outcome traits were derived using code displayed in 'Data preparation': LBC: [neuroimaging](LBC_neuro.html) & [phenotypic](LBC_pheno.html) data; UKB: [neuroimaging](UKB_neuro.html) & [phenotypic](UKB_pheno.html) data.\n\n# Load packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(data.table)\nlibrary(ggpubr)\nlibrary(patchwork)\n```\n:::\n\n\n# Define funtion\n\nThis function calculates uni-variate associations across all outcomes in `pheno` and all predictors in `neuro`. The function detects whether traits are continuous, binary, or zero-inflated and runs the models accordingly with linear, logistic, or hurdle regression. The choice of model can be overwritten with the `overwrite` flag.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrawAssocAim3 = function(pheno = pheno,\n                        neuro = neuro,\n                        neuroVar = \"resid_stand\",\n                        numOutcomeStand = FALSE,\n\t\t\t\t\t\t            overwrite = NULL){\n\n    # find ID column\n    IDvar = names(pheno)[names(pheno) %in% names(neuro)]\n    if(length(IDvar) == 0){warning(\"Pheno and neuro data do not share an ID column.\"); break}\n\n    # keep neuro data from one time point only\n    #neuro = neuro[which(neuro$wave == neuroWave),]\n\t# edit 8/4/2024: saved data for each wave individually so no need to subset anymore\n\n    # merge the two data\n    dat = merge(pheno, neuro, by = IDvar)\n\n    # identify columns that can analysed with logit models\n    bin = apply(pheno, 2, function(x){ all(na.omit(x) %in% 0:1)})\n    binVar = attr(bin, \"names\")[bin]\n\n    # identify columns that can be analysed with linear models\n    # any variable where 50% or more of the entries are unique, I think it's safe to say its a continuous value\n    num = apply(pheno, 2, function(x){ (length(unique(x))/length(x)) > 0.5 })\n    numVar = names(pheno)[num]\n    # this will however also pick up on IDvar\n    numVar = numVar[numVar != IDvar]\n\n    # standardise numeric variables if indicates\n    if(isTRUE(numOutcomeStand)){\n      dat[,numVar] = as.data.frame(lapply(dat[,numVar], scale))\n    }else{message(\"You chose not to standardise your outcome variable. If that was an accident, use numOutcomeStand == TRUE\")}\n\n    # identify zero-inflated variables to be analysed with hurdle regression\n    # if the mode in the data is represented in over 30% of the entries (and it's not binary), I think it's safe to say it's zero-inflated\n    Mode = function(y){un = unique(y); un[which.max(tabulate(match(y, un)))]}\n    mode = apply(pheno, 2, function(x){ sum(x == Mode(x), na.rm=T)/length(x) > 0.3 })\n    modeVar = names(pheno)[mode]\n    # remove binary variables from this category\n    modeVar = modeVar[!modeVar %in% binVar]\n\t\n\t# if user specified to overwrite the categorisation of variables into num, bin and mode, here I assign the user specified data format\n\tif(!is.null(overwrite)){\n\t\t# remove assigned status from binVar, numVar, modeVar\n\t\tnumVar = numVar[!numVar %in% overwrite$var]\n\t\tbinVar = binVar[!binVar %in% overwrite$var]\n\t\tmodeVar = modeVar[!modeVar %in% overwrite$var]\n\t\t\n\t\t# cycle through the rows in overwrite\n\t\tfor(a in 1:nrow(overwrite)){\n\t\t\tif(overwrite$modelType[a] == \"hurdle\"){modeVar = append(modeVar, overwrite$var[a])}\n\t\t\tif(overwrite$modelType[a] == \"logistic\"){binVar = append(binVar, overwrite$var[a])}\n\t\t\tif(overwrite$modelType[a] == \"linear\"){numVar = append(numVar, overwrite$var[a])}\n\t\t}\n\t}\n\n    # test if all variables have been assigned a category\n    VarAvail = names(pheno)[which(names(pheno) != IDvar)]\n    VarAssigned = c(binVar, numVar, modeVar)\n    if(isFALSE(all(VarAvail %in% VarAssigned))){warning(\"It is not immediately obvious which category your variables belong to. Investigate and reformat to determine accurate statistical models! Alternatively, you can overwrite with the 'overwrite' command.\")}\n\n    # create object to hold results\n    resNames = c(\"Outcome\", \"Predictor\", \"Stat.model\", \"beta\", \"std.error\", \"p.value\", \"R2_percent\")\n    results = data.frame(matrix(nrow = 0, ncol = length(resNames)))\n    names(results) = resNames\n\n    Index = nrow(results)\n    ### calculate associations for linear models\n    for(i in numVar){\n\n      model = lm(paste0(i, \" ~ \", neuroVar), data = dat)\n\n      # store model info\n      Index = Index+1\n      results[Index,] = NA\n      results$Outcome[Index] = i\n      results$Predictor[Index] = neuroVar\n      results$Stat.model[Index] = \"Linear regression\"\n      results$beta[Index] = summary(model)$coefficients[2,1]\n      results$std.error[Index] = summary(model)$coefficients[2,2]\n      results$p.value[Index] = summary(model)$coefficients[2,4]\n      results$R2_percent[Index] = summary(model)$r.squared*100\n    }\n\n    ### calculate logistic models\n    for(i in binVar){\n\t\t# code prior to running this function should have made the binary variables factors \n\n      model = glm(paste0(i, \" ~ \", neuroVar), family = \"binomial\", data = dat)\n\n      # store model info\n      Index = Index+1\n      results[Index,] = NA\n      results$Outcome[Index] = i\n      results$Predictor[Index] = neuroVar\n      results$Stat.model[Index] = \"Logistic regression\"\n      results$beta[Index] = summary(model)$coefficients[2,1]\n      results$std.error[Index] = summary(model)$coefficients[2,2]\n      results$p.value[Index] = summary(model)$coefficients[2,4]\n      results$R2_percent[Index] = fmsb::NagelkerkeR2(model)$R2 *100\n\n    }\n\n    ## calculate hurdle models\n    for(i in modeVar){\n      # force variable to be inetger as the model will otherwise not run *made for count values)\n      dat[,i] = as.integer(round(dat[,i]))\n\n      model = pscl::hurdle(as.formula(paste0(i, \" ~ \", neuroVar)), data = dat, dist=\"negbin\")\n\n      # store model info\n      Index = Index+1\n      results[Index,] = NA\n      results$Outcome[Index] = i\n      results$Predictor[Index] = neuroVar\n      results$Stat.model[Index] = \"Hurdle regression\"\n      results$beta[Index] = summary(model)$coefficient$zero[2,1]\n      results$std.error[Index] = summary(model)$coefficient$zero[2,2]\n      results$p.value[Index] = summary(model)$coefficient$zero[2,4]\n      results$R2_percent[Index] = pscl::pR2(model)[5]*100\n\n      message(\"Parameters for hurdle regression are zero hurdle model coefficient (binomial with logit link), but R2 is for both parts of the model.\")\n    }\n\n    return(results)\n}\n```\n:::\n\n\n# Calculate phenotypic associations\n\n## Lothian Birth Cohort (LBC) 1936\n\n### Wave 2: Lifetime brain atrophy (LBA; cross-sectional)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# read in LBC data \npheno = fread(paste0(wd, \"/LBC1936_allPheno.txt\"), data.table = F)\nneuro = fread(paste0(wd, \"/LBC1936_crossNeuroWave1.txt\"), data.table = F)\n\n# make sure binary variables are coded as factors because the function will otherwise not recognise it as factor\nColNames=c(\"dementia\",\"APOEe4\",\"diabetes\",\"hypertension\",\"Stroke\")\npheno[ColNames] = lapply(pheno[ColNames], as.factor)\n\n# make sure continuous variables are standardised (rawAssocAim3 deals with that)\n#ColNames=c(\"iCog\", \"sCog\", \"iFrailty\", \"sFrailty\", \"iBMI\", \"sBMI\", \"BrainAge\",\"ageMRI_w2\")\n#pheno[ColNames] = as.data.frame(scale(pheno[ColNames]))\n\n# to ensure unified interpretation, I reverse code the ratio and residual score\nneuro$resid_stand = neuro$resid_stand*(-1)\nneuro$ratio_stand = neuro$ratio_stand*(-1)\n\n# calculate raw associations for all atrophy scores\noverwrite = data.frame(var = c(\"VisualAtrophyDeep\", \"VisualAtrophySuperficial\"), modelType = c(\"linear\", \"linear\"))\nrawDiff = rawAssocAim3(pheno = pheno, neuro = neuro, neuroVar = \"diff_stand\", numOutcomeStand = TRUE, overwrite = overwrite)\nrawRatio = rawAssocAim3(pheno = pheno, neuro = neuro, neuroVar = \"ratio_stand\", numOutcomeStand = TRUE, overwrite = overwrite)\nrawResid = rawAssocAim3(pheno = pheno, neuro = neuro, neuroVar = \"resid_stand\", numOutcomeStand = TRUE, overwrite = overwrite)\n\nraw2 = rbind(rawDiff, rawRatio, rawResid)\n```\n:::\n\n\n### Wave 5: LBA (cross-sectional)\n\n\n::: {.cell}\n\n```{.r .cell-code}\npheno = fread(paste0(wd, \"/LBC1936_allPheno.txt\"), data.table = F)\nneuro = fread(paste0(wd, \"/LBC1936_crossNeuroWave4.txt\"), data.table = F)\n\n# make sure binary variables are coded as factors because the function will otherwise not recognise it as factor\nColNames=c(\"dementia\",\"APOEe4\",\"diabetes\",\"hypertension\",\"Stroke\")\npheno[ColNames] = lapply(pheno[ColNames], as.factor)\n\n# make sure continuous variables are standardised (rawAssocAim3 deals with that)\n#ColNames=c(\"iCog\", \"sCog\", \"iFrailty\", \"sFrailty\", \"iBMI\", \"sBMI\", \"BrainAge\",\"ageMRI_w2\")\n#pheno[ColNames] = as.data.frame(scale(pheno[ColNames]))\n\n# to ensure unified interpretation, I reverse code the ratio and residual score\nneuro$resid_stand = neuro$resid_stand*(-1)\nneuro$ratio_stand = neuro$ratio_stand*(-1)\n\n# calculate raw associations for all atrophy scores\noverwrite = data.frame(var = c(\"VisualAtrophyDeep\", \"VisualAtrophySuperficial\"), modelType = c(\"linear\", \"linear\"))\nrawDiff = rawAssocAim3(pheno = pheno, neuro = neuro, neuroVar = \"diff_stand\", numOutcomeStand = TRUE, overwrite = overwrite)\nrawRatio = rawAssocAim3(pheno = pheno, neuro = neuro, neuroVar = \"ratio_stand\", numOutcomeStand = TRUE, overwrite = overwrite)\nrawResid = rawAssocAim3(pheno = pheno, neuro = neuro, neuroVar = \"resid_stand\", numOutcomeStand = TRUE, overwrite = overwrite)\n\nraw5 = rbind(rawDiff, rawRatio, rawResid)\n```\n:::\n\n\n### Longitudinal data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# read in LBC data \npheno = fread(paste0(wd, \"/LBC1936_allPheno.txt\"), data.table = F)\nneuro = fread(paste0(wd, \"/LBC1936_longTBVWaves2and5.txt\"), data.table = F)\n\n# make sure binary variables are coded as factors\nColNames=c(\"dementia\",\"APOEe4\",\"diabetes\",\"hypertension\",\"Stroke\")\npheno[ColNames] = lapply(pheno[ColNames], as.factor)\n\n# make sure continuous variables are standardised (rawAssocAim3 deals with that)\n#ColNames=c(\"iCog\", \"sCog\", \"iFrailty\", \"sFrailty\", \"iBMI\", \"sBMI\", \"BrainAge\",\"ageMRI_w2\")\n#pheno[ColNames] = as.data.frame(scale(pheno[ColNames]))\n\n# to ensure unified interpretation, I reverse code the ratio and residual score\nneuro$TBVresid_2to5_stand = neuro$TBVresid_2to5_stand*(-1)\nneuro$TBVratio_5to2_stand = neuro$TBVratio_5to2_stand*(-1)\n\n# calculate raw associations for all atrophy scores\noverwrite = data.frame(var = c(\"VisualAtrophyDeep\", \"VisualAtrophySuperficial\"), modelType = c(\"linear\", \"linear\"))\nrawDiff = rawAssocAim3(pheno = pheno, neuro = neuro, neuroVar = \"TBVdiff_2to5_stand\", numOutcomeStand = TRUE, overwrite = overwrite)\nrawRatio = rawAssocAim3(pheno = pheno, neuro = neuro, neuroVar = \"TBVratio_5to2_stand\", numOutcomeStand = TRUE, overwrite = overwrite)\nrawResid = rawAssocAim3(pheno = pheno, neuro = neuro, neuroVar = \"TBVresid_2to5_stand\", numOutcomeStand = TRUE, overwrite = overwrite)\n\nrawObs = rbind(rawDiff, rawRatio, rawResid)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# save cross data\nraw2$wave = 2\nraw5$wave = 5\nraw = rbind(raw2, raw5)\nraw$purpose = \"Estimated Atrophy (cross-sectional)\"\nraw$purpose = \"Estimated Atrophy (cross-sectional)\"\nrawObs$purpose = \"Observed Atrophy (longitudinal)\"\nrawObs$wave = NA\nsave = rbind(raw, rawObs)\nfwrite(save, file = paste0(wd, \"/LBC1936_assocs_observed_vs_estimated_atrophy.txt\"), col.names = T, row.names = F, quote = F, na = NA, sep = \"\\t\")\n```\n:::\n\n\n## UK Biobank (UKB)\n\n### Wave 2: LBA (cross-sectional)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# read in LBC data \npheno = fread(paste0(wd, \"/UKB_allPheno.txt\"), data.table = F)\nneuro = fread(paste0(wd, \"/UKB_neuroNoLongProcess.txt\"), data.table = F)\n# get wave of interest\nneuro = neuro[which(neuro$wave == 2),]\n\n# edit:30/09/2024 (realised later that I hadn't cleaned the longitudinal data the same as the cross-sectional data, 10SD cutoff which some participants violate with the longitudinal data) - removed 6 participants\nneuro <- neuro[which(neuro$TBVdiff_2to3_stand < 10),]\nneuro <- neuro[which(neuro$TBVdiff_2to3_stand > (-10)),]\nneuro <- neuro[which(neuro$TBVratio_3to2_stand < 10),]\nneuro <- neuro[which(neuro$TBVratio_3to2_stand > (-10)),]\nneuro <- neuro[which(neuro$TBVresid_2to3_stand < 10),]\nneuro <- neuro[which(neuro$TBVresid_2to3_stand > (-10)),]\n\n# to ensure unified interpretation, I reverse code the ratio and residual score\nneuro$resid_stand = neuro$resid_stand*(-1)\nneuro$ratio_stand = neuro$ratio_stand*(-1)\n\n# make sure binary variables are coded as factors because the function will otherwise not recognise it as factor\nColNames=c(\"dementia\",\"APOEe4\",\"diabetes\",\"hypertension\",\"stroke\")\npheno[ColNames] = lapply(pheno[ColNames], as.factor)\n\n# make sure continuous variables are standardised (rawAssocAim3 deals with that)\n#ColNames=c(\"cog\", \"BMI\", \"brainAge\")\n#pheno[ColNames] = as.data.frame(scale(pheno[ColNames]))\n\n# calculate raw associations for all atrophy scores\noverwrite = data.frame(var = c(\"packyears\", \"frailty\"), modelType = c(\"hurdle\", \"hurdle\")) # can overwrite with logistic of linear\nrawDiff = rawAssocAim3(pheno = pheno, neuro = neuro, neuroVar = \"diff_stand\", numOutcomeStand = TRUE, overwrite = overwrite)\nrawRatio = rawAssocAim3(pheno = pheno, neuro = neuro, neuroVar = \"ratio_stand\", numOutcomeStand = TRUE, overwrite = overwrite)\nrawResid = rawAssocAim3(pheno = pheno, neuro = neuro, neuroVar = \"resid_stand\", numOutcomeStand = TRUE, overwrite = overwrite)\n\nraw2 = rbind(rawDiff, rawRatio, rawResid)\n```\n:::\n\n\n### Wave 3: LBA (cross-sectional)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# read in data \npheno = fread(paste0(wd, \"/UKB_allPheno.txt\"), data.table = F)\nneuro = fread(paste0(wd, \"/UKB_neuroNoLongProcess.txt\"), data.table = F)\n# get wave of interest\nneuro = neuro[which(neuro$wave == 3),]\n# edit:30/09/2024 (realised later that I hadn't cleaned the longitudinal data the same as the cross-sectional data, 10SD cutoff which some participants violate with the longitudinal data) - removed 6 participants\nneuro <- neuro[which(neuro$TBVdiff_2to3_stand < 10),]\nneuro <- neuro[which(neuro$TBVdiff_2to3_stand > (-10)),]\nneuro <- neuro[which(neuro$TBVratio_3to2_stand < 10),]\nneuro <- neuro[which(neuro$TBVratio_3to2_stand > (-10)),]\nneuro <- neuro[which(neuro$TBVresid_2to3_stand < 10),]\nneuro <- neuro[which(neuro$TBVresid_2to3_stand > (-10)),]\n\n# to ensure unified interpretation, I reverse code the ratio and residual score\nneuro$resid_stand = neuro$resid_stand*(-1)\nneuro$ratio_stand = neuro$ratio_stand*(-1)\n\n# make sure binary variables are coded as factors because the function will otherwise not recognise it as factor\nColNames=c(\"dementia\",\"APOEe4\",\"diabetes\",\"hypertension\",\"stroke\")\npheno[ColNames] = lapply(pheno[ColNames], as.factor)\n\n# make sure continuous variables are standardised (rawAssocAim3 deals with that)\n#ColNames=c(\"cog\", \"BMI\", \"brainAge\")\n#pheno[ColNames] = as.data.frame(scale(pheno[ColNames]))\n\n# calculate raw associations for all atrophy scores\noverwrite = data.frame(var = c(\"packyears\", \"frailty\"), modelType = c(\"hurdle\", \"hurdle\")) # can overwrite with logistic of linear\nrawDiff = rawAssocAim3(pheno = pheno, neuro = neuro, neuroVar = \"diff_stand\", numOutcomeStand = TRUE, overwrite = overwrite)\nrawRatio = rawAssocAim3(pheno = pheno, neuro = neuro, neuroVar = \"ratio_stand\", numOutcomeStand = TRUE, overwrite = overwrite)\nrawResid = rawAssocAim3(pheno = pheno, neuro = neuro, neuroVar = \"resid_stand\", numOutcomeStand = TRUE, overwrite = overwrite)\n\nraw5 = rbind(rawDiff, rawRatio, rawResid)\n```\n:::\n\n\n### Longitudinal atrophy scores\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# read in data \npheno = fread(paste0(wd, \"/UKB_allPheno.txt\"), data.table = F)\nneuro = fread(paste0(wd, \"/UKB_neuroNoLongProcess.txt\"), data.table = F)\n# shouldn't make a difference which wave we keep because long is saved double\nneuro = neuro[which(neuro$wave == 2),]\n# edit:30/09/2024 (realised later that I hadn't cleaned the longitudinal data the same as the cross-sectional data, 10SD cutoff which some participants violate with the longitudinal data) - removed 6 participants\nneuro <- neuro[which(neuro$TBVdiff_2to3_stand < 10),]\nneuro <- neuro[which(neuro$TBVdiff_2to3_stand > (-10)),]\nneuro <- neuro[which(neuro$TBVratio_3to2_stand < 10),]\nneuro <- neuro[which(neuro$TBVratio_3to2_stand > (-10)),]\nneuro <- neuro[which(neuro$TBVresid_2to3_stand < 10),]\nneuro <- neuro[which(neuro$TBVresid_2to3_stand > (-10)),]\n\n# to ensure unified interpretation, I reverse code the ratio and residual score\nneuro$TBVresid_2to3_stand = neuro$TBVresid_2to3_stand*(-1)\nneuro$TBVratio_3to2_stand = neuro$TBVratio_3to2_stand*(-1)\n\n# make sure binary variables are coded as factors because the function will otherwise not recognise it as factor\nColNames=c(\"dementia\",\"APOEe4\",\"diabetes\",\"hypertension\",\"stroke\")\npheno[ColNames] = lapply(pheno[ColNames], as.factor)\n\n# make sure continuous variables are standardised (rawAssocAim3 deals with that)\n#ColNames=c(\"cog\", \"BMI\", \"brainAge\")\n#pheno[ColNames] = as.data.frame(scale(pheno[ColNames]))\n\n# calculate raw associations for all atrophy scores\noverwrite = data.frame(var = c(\"packyears\", \"frailty\"), modelType = c(\"hurdle\", \"hurdle\")) # can overwrite with logistic of linear\nrawDiff = rawAssocAim3(pheno = pheno, neuro = neuro, neuroVar = \"TBVdiff_2to3_stand\", numOutcomeStand = TRUE, overwrite = overwrite)\nrawRatio = rawAssocAim3(pheno = pheno, neuro = neuro, neuroVar = \"TBVratio_3to2_stand\", numOutcomeStand = TRUE, overwrite = overwrite)\nrawResid = rawAssocAim3(pheno = pheno, neuro = neuro, neuroVar = \"TBVresid_2to3_stand\", numOutcomeStand = TRUE, overwrite = overwrite)\n\nrawObs = rbind(rawDiff, rawRatio, rawResid)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# save cross data\nraw2$wave = 2\nraw5$wave = 3\nraw = rbind(raw2, raw5)\nraw$purpose = \"Estimated Atrophy (cross-sectional)\"\nraw$purpose = \"Estimated Atrophy (cross-sectional)\"\nrawObs$purpose = \"Observed Atrophy (longitudinal)\"\nrawObs$wave = NA\nsave = rbind(raw, rawObs)\nfwrite(save, file = paste0(wd, \"/UKB_assocs_observed_vs_estimated_atrophy.txt\"), col.names = T, row.names = F, quote = F, na = NA, sep = \"\\t\")\n```\n:::\n\n\n# Plot results\n\n## LBC1936\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# betas between atrophy scores and traits\nsetwd(wd)\nfile = list.files(pattern=\"LBC1936_assocs_observed_vs_estimated_atrophy\")\nassoc = fread(file)\n\n# brain age phenotype is not intuitively interpretable:\n# positive value should mean the participant has a healthier looking brain than expected given their age \n# negative value should mean the participant has an unhealthier looking brain than expected\n# Hence, here we just flip the assocs so that more LBA is associated with older brain age\nassoc$beta[which(assoc$Outcome == \"BrainAge\")] <- assoc$beta[which(assoc$Outcome == \"BrainAge\")]*(-1)\n\n# calculate lower and upper bounds of assoc\nassoc$ci_l = assoc$beta - (1.96*assoc$std.error)\nassoc$ci_u = assoc$beta + (1.96*assoc$std.error)\n\n# because beta shouldn't exceed 1, and it makes the plots look ugly, I will artificially reduce those here\nassoc$ci_l = ifelse(assoc$ci_l < -1.21, -1.21, assoc$ci_l)\nassoc$ci_u = ifelse(assoc$ci_u > 1.21, 1.21, assoc$ci_u)\n\n# make data frame for geom_label\nassoc$label = paste0(round(assoc$R2_percent, digits = 1), \"%\")\n# only print the label is correlation is significant\nsigBonferroni = 0.05/length(unique(assoc$Outcome))\nassoc$label[which(assoc$p.value > sigBonferroni)] = NA\n\n\n######################################################################################\n###### Continuous traits\n######################################################################################\n############## ESTIMATED ATROPHY\n### first, only estimated atrophy\n# only keep 'diff_stand', 'ratio_stand' or 'resid_stand'\nestimated = assoc[grepl(\"diff_stand|ratio_stand|resid_stand\",assoc$Predictor),]\n# restrict to wave 5 (more atrophy)\nestimated = estimated[grepl(\"5\", estimated$wave),]\n# restrict to continuous variables only\nestimated = estimated[grepl(\"Linear\", estimated$Stat.model)]\n\n# c(\"iCog\",\"sCog\",\"Dementia\",\"APOEe4\",\"iFrailty\",\"sFrailty\",\"Diabetes\",\"Stroke\",\"Hypertension\",\"iBMI\",\"sBMI\",\"BrainAge\",\"Packyears\")\n\n# order phenotypes\nestimated$Outcomes <- factor(estimated$Outcome, \n                             levels=c(\"VisualAtrophySuperficial\",\"VisualAtrophyDeep\",\"iCog\",\"sCog\",\"iFrailty\",\"sFrailty\",\"iBMI\",\"sBMI\",\"BrainAge\"),\n                             labels = c(\"Visual atrophy\\nrating\\n (superficial)\",\"Visual atrophy\\nrating (deep)\",\"iCog\",\"sCog\",\"iFrailty\",\"sFrailty\",\"iBMI\",\"sBMI\",\"BrainAge\"),\n                             ordered=T)\n\n\n\nestLinear=ggplot(data=estimated, aes(y=Outcomes,x=beta),shape=3)+\n  xlim(-1.25, 1.25)+\n  geom_point(aes(col=Predictor),size=2,position=position_dodge(width=0.5))+\n  geom_errorbar(aes(xmin=ci_l, xmax=ci_u,col=Predictor), linewidth=1, width=.2,position=position_dodge(width=0.5))+\n  geom_vline(xintercept = 0, colour=\"grey10\", alpha=0.5,linetype=2)+\n  geom_text(aes(y=Outcomes,x=-0.7, label = label, col=Predictor), size = 3.5, position=position_dodge(width=0.8))+\n  scale_y_discrete(limits = rev(levels(as.factor(estimated$Outcomes))))+ # reverse order of y-axis\n  scale_x_continuous(limits = c(-0.9, 0.9), breaks = seq(-1,1,by=0.4))+\n    theme_bw()+\n  ylab(\"Continuous outcome traits\")+\n  xlab(\"Linear regression:\\nbeta (95%CI)\")+\n  ggtitle(\"Lifetime brain atrophy\\nat age 82 years\\n(wave 5)\")+\n  scale_color_manual(labels = c(\"Difference score\", \"Ratio score\", \"Residual score\"), values = c(\"#D81B60\", \"#FFC107\", \"#004D40\")) +\n  theme(plot.title = element_text(face = \"plain\", size=17, hjust = 0.5))+ # add centred title\n  theme(text = element_text(size=12),\n        axis.text.x = element_text(size=12),#angle=45\n        axis.text.y = element_text(size=12),\n        axis.title.y = element_text(face=\"bold\", colour='black', size=12),\n        axis.title.x = element_text(colour='black', size=12),\n        panel.border = element_blank(),\n        plot.title = element_text(face = \"bold\", colour='black', size=12))+\n  theme(legend.position=\"none\")\n\n### why is diff score always the other way? Sensible because larger diff score is worse, but smaller ratio score is worse\n\n############## OBSERVED ATROPHY\n### only keep longitudinal atrophy\nobserved = assoc[grepl(\"TBV\",assoc$Predictor),]\n# restrict to continuous variables only\nobserved = observed[grepl(\"Linear\", observed$Stat.model)]\n\n# order phenotypes\nobserved$Outcomes <- factor(observed$Outcome, \n                            levels=c(\"VisualAtrophySuperficial\",\"VisualAtrophyDeep\",\"iCog\",\"sCog\",\"iFrailty\",\"sFrailty\",\"iBMI\",\"sBMI\",\"BrainAge\"),\n                            labels = c(\"Visual atrophy\\nrating\\n (superficial)\",\"Visual atrophy\\nrating (deep)\",\"iCog\",\"sCog\",\"iFrailty\",\"sFrailty\",\"iBMI\",\"sBMI\",\"BrainAge\"),\n                            ordered=T)\n\nobsLinear=ggplot(data=observed, aes(y=Outcomes,x=beta),shape=3)+\n  geom_point(aes(col=Predictor),size=2,position=position_dodge(width=0.5))+\n  geom_errorbar(aes(xmin=ci_l, xmax=ci_u,col=Predictor), linewidth=1, width=.2,position=position_dodge(width=0.5))+\n  geom_vline(xintercept = 0, colour=\"grey10\", alpha=0.5,linetype=2)+\n  geom_text(aes(y=Outcomes,x=-0.7, label = label, col=Predictor), size = 3.5,position=position_dodge(width=0.8))+\n    scale_y_discrete(limits = rev(levels(as.factor(observed$Outcomes))))+ # reverse order of y-axis\n  scale_x_continuous(limits = c(-0.9, 0.9), breaks = seq(-1,1,by=0.4))+\n  theme_bw()+\n  ylab(\"ontinuous outcome traits\")+\n  xlab(\"Linear regression:\\nbeta (95%CI)\")+\n  ggtitle(\"Observed atrophic changes\\nbetween age 73 and 82\\n(waves 2 to 5)\")+\n  scale_color_manual(labels = c(\"Difference score\", \"Ratio score\", \"Residual score\"), values = c(\"#D81B60\", \"#FFC107\", \"#004D40\")) +\n  theme(plot.title = element_text(face = \"plain\", size=17, hjust = 0.5))+ # add centred title\n  theme(text = element_text(size=12),\n        axis.text.x = element_text(size=12),#angle=45\n        axis.text.y = element_text(size=12),\n        axis.title.y = element_blank(),\n        panel.border = element_blank(),\n        axis.title.x = element_text(colour='black', size=12),\n        plot.title = element_text(face = \"bold\", colour='black', size=12))+\n  theme(legend.position=\"none\")\n\nplot1 = estLinear + \n        obsLinear + \n        plot_layout(ncol = 2)\n        #plot_annotation(title = \"Correlations with health-related outcomes in LBC\",\n                        #theme = theme(plot.title = element_text(face = \"bold\", colour = \"black\", size = 14, hjust = 0.5))) & theme(legend.position = 'bottom')\n\n#ggpubr::annotate_figure(plot, top = text_grob(\"Correlations with health-related outcomes in LBC\", \n#                                      color = \"black\", face = \"bold\", size = 14))\n\n######################################################################################\n###### Binary traits\n######################################################################################\n############## ESTIMATED ATROPHY\n### first, only estimated atrophy\n# only keep 'diff_stand', 'ratio_stand' or 'resid_stand'\nestimated = assoc[grepl(\"diff_stand|ratio_stand|resid_stand\",assoc$Predictor),]\n# restrict to wave 5 (more atrophy)\nestimated = estimated[grepl(\"5\", estimated$wave),]\n# restrict to continuous variables only\nestimated = estimated[grepl(\"Logistic|Hurdle\", estimated$Stat.model)]\n\n# transform beta to OR\nestimated$OR = exp(estimated$beta)\nestimated$ORci_l = exp(estimated$beta - (1.96 * estimated$std.error))\nestimated$ORci_u = exp(estimated$beta + (1.96 * estimated$std.error))\n\n# display as log odds\nestimated$logOdds = log(estimated$OR)\nestimated$logOdds_ci_l = log(estimated$ORci_l)\nestimated$logOdds_ci_u = log(estimated$ORci_u)\n\n# order phenotypes\nestimated$Outcomes <- factor(estimated$Outcome, \n                             levels=c(\"dementia\",\"APOEe4\",\"diabetes\",\"Stroke\",\"hypertension\",\"packyears\"),\n                             labels = c(\"Dementia\",\"APOEe4\",\"Diabetes\",\"Stroke\",\"Hypertension\",\"Packyears\"),\n                             ordered=T)\n\nestLog=ggplot(data=estimated, aes(y=Outcomes,x=OR),shape=3)+\n  xlim(0, 2.3)+\n  geom_point(aes(col=Predictor),size=2,position=position_dodge(width=0.5))+\n  geom_errorbar(aes(xmin=ORci_l, xmax=ORci_u,col=Predictor), linewidth=1, width=.2,position=position_dodge(width=0.5))+\n  geom_vline(xintercept = 1, colour=\"grey10\", alpha=0.5,linetype=2)+\n  geom_text(aes(y=Outcomes,x=0.4, label = label, col=Predictor), size = 3.5,position=position_dodge(width=0.8))+\n    scale_y_discrete(limits = rev(levels(as.factor(estimated$Outcomes))))+ # reverse order of y-axis\n  scale_x_continuous(limits = c(0.3,3), breaks = seq(0,3,by=0.4))+\n  theme_bw()+\n  ylab(\"Binary outcome traits\")+\n  xlab(\"Logistic regression:\\nOdds ratio (95%CI)\")+\n  #ggtitle(\"'Estimated' brain atrophy\\n(at wave 5)\")+\n  scale_color_manual(labels = c(\"Difference score\", \"Ratio score\", \"Residual score\"), values = c(\"#D81B60\", \"#FFC107\", \"#004D40\")) +\n  theme(plot.title = element_text(face = \"plain\", size=17, hjust = 0.5))+ # add centred title\n  theme(text = element_text(size=12),\n        axis.text.x = element_text(size=12),#angle=45\n        axis.text.y = element_text(size=12),\n        panel.border = element_blank(),\n        axis.title.y = element_text(face=\"bold\", colour='black', size=12),\n        axis.title.x = element_text(colour='black', size=12),\n        plot.title = element_text(face = \"bold\", colour='black', size=13))+\n  theme(legend.position=\"none\")\n\n\n############## OBSERVED ATROPHY\n### only keep longitudinal atrophy\nobserved = assoc[grepl(\"TBV\",assoc$Predictor),]\n# restrict to continuous variables only\nobserved = observed[grepl(\"Logistic|Hurdle\", observed$Stat.model)]\n\n# transform beta to OR\nobserved$OR = exp(observed$beta)\nobserved$ORci_l = exp(observed$beta - (1.96 * observed$std.error))\nobserved$ORci_u = exp(observed$beta + (1.96 * observed$std.error))\n\n# order phenotypes\nobserved$Outcomes <- factor(observed$Outcome, \n                            levels=c(\"dementia\",\"APOEe4\",\"diabetes\",\"Stroke\",\"hypertension\",\"packyears\"),\n                            labels = c(\"Dementia\",\"APOEe4\",\"Diabetes\",\"Stroke\",\"Hypertension\",\"Packyears\"),\n                            ordered=T)\n\nobsLog=ggplot(data=observed, aes(y=Outcomes,x=OR),shape=3)+\n  geom_point(aes(col=Predictor),size=2,position=position_dodge(width=0.5))+\n  geom_errorbar(aes(xmin=ORci_l, xmax=ORci_u,col=Predictor), linewidth=1, width=.2,position=position_dodge(width=0.5))+\n  geom_vline(xintercept = 1, colour=\"grey10\", alpha=0.5,linetype=2)+\n  geom_text(aes(y=Outcomes,x=0.4, label = label, col=Predictor), size = 3.5,position=position_dodge(width=1))+\n  scale_y_discrete(limits = rev(levels(as.factor(estimated$Outcomes))))+ # reverse order of y-axis\n  scale_x_continuous(limits = c(0,6.7), breaks = seq(0,6,by=1))+\n  theme_bw()+\n  ylab(\"Binary outcome traits\")+\n  xlab(\"Logistic regression:\\nOdds ratio (95%CI)\")+\n  #ggtitle(\"'Observed' brain atrophy\\n(wave 2 to 5)\")+\n  scale_color_manual(labels = c(\"Difference score\", \"Ratio score\", \"Residual score\"), values = c(\"#D81B60\", \"#FFC107\", \"#004D40\")) +\n  theme(plot.title = element_text(face = \"plain\", size=17, hjust = 0.5))+ # add centred title\n  theme(text = element_text(size=12),\n        axis.text.x = element_text(size=12),#angle=45\n        axis.text.y = element_text(size=12),\n        panel.border = element_blank(),\n        axis.title.y = element_blank(),\n        axis.title.x = element_text(colour='black', size=12),\n        plot.title = element_text(face = \"bold\", colour='black', size=13),\n        legend.position = \"bottom\")\n\nplot2 = estLog + \n  obsLog + \n  plot_layout(guides = \"collect\")\n\nlayout <- \"\nAB\nAB\nCD\n\"\n\nplot <- estLinear + obsLinear + estLog + obsLog + \n                    plot_layout(design = layout, guides = \"collect\")+\n                    plot_annotation(title = \"Brain atrophy associations with health-related outcomes in LBC\",\n                  caption = \"Note: R2 estimates are only printed if the corresponding association passed correction for multiple testing (p=0.05/15).\\n'Packyears' was analysed with Hurdle regression, but the coefficient printed here is from the negative binomial part of the equation,\\nhence on log-odds scale like the other binary traits. Pseudo-R2 estimates are for the full hurdle model.\",\n                    tag_levels = \"A\",\n                    theme = theme(legend.position = \"bottom\",plot.title = element_text(face = \"bold\", colour = \"black\", size = 14, hjust = 0.5))) \n\n\n#ggsave(paste0(out,\"phenotypic/LBC_assocs_cross_vs_long.jpg\"), bg = \"white\",plot = plot, width = 20, height = 28, units = \"cm\", dpi = 300)\n```\n:::\n\n\n![](images/LBC_assocs_cross_vs_long.jpg){fig-align=\"center\"}\n\n## UKB\n\nThis plot is in Supplementary Plot 7. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# read in data \nsetwd(wd)\nfile = list.files(pattern=\"UKB_assocs_observed_vs_estimated_atrophy\")\nassoc = fread(file)\n\n# brain age phenotype is not intuitively interpretable:\n# positive value should mean the particpant has a healthier looking brain tthan expected given their age \n# negative value should mean the participant has an unhealthier looking brain than expected\n# Hence, here we just flip the assocs so that more LBA is associated with older brian age\nassoc$beta[which(assoc$Outcome == \"brainAge\")] <- assoc$beta[which(assoc$Outcome == \"brainAge\")]*(-1)\n\n# calculate lower and upper bounds of assoc\nassoc$ci_l = assoc$beta - (1.96*assoc$std.error)\nassoc$ci_u = assoc$beta + (1.96*assoc$std.error)\n\n# because beta shouldn't exceed 1, and it makes the plots look ugly, I will artifically reduce those here\nassoc$ci_l = ifelse(assoc$ci_l < -1.21, -1.21, assoc$ci_l)\nassoc$ci_u = ifelse(assoc$ci_u > 1.21, 1.21, assoc$ci_u)\n\n# make data frame for geom_label\nassoc$label = paste0(round(assoc$R2_percent, digits = 1), \"%\")\n# only print the label is correlation is significant\nsigBonferroni = 0.05/length(unique(assoc$Outcome))\nassoc$label[which(assoc$p.value > sigBonferroni)] = NA\n\n######################################################################################\n###### Continuous traits\n######################################################################################\n############## ESTIMATED ATROPHY\n### first, only estimated atrophy\n# only keep 'diff_stand', 'ratio_stand' or 'resid_stand'\nestimated = assoc[grepl(\"diff_stand|ratio_stand|resid_stand\",assoc$Predictor),]\n# restrict to wave 3 (more atrophy)\nestimated = estimated[grepl(\"3\", estimated$wave),]\n# restrict to continuous variables only\nestimated = estimated[grepl(\"Linear\", estimated$Stat.model)]\n\n# order phenotypes\nestimated$Outcomes <- factor(estimated$Outcome, \n                             levels=c(\"cog\",\"BMI\",\"brainAge\"),\n                             labels = c(\"Cog\",\"BMI\",\"BrainAge\"),\n                             ordered=T)\n\nestLinear=ggplot(data=estimated, aes(y=Outcomes,x=beta),shape=3)+\n  xlim(-1.25, 1.25)+\n  geom_point(aes(col=Predictor),size=2,position=position_dodge(width=0.5))+\n  geom_errorbar(aes(xmin=ci_l, xmax=ci_u,col=Predictor), linewidth=1, width=.2,position=position_dodge(width=0.5))+\n  geom_vline(xintercept = 0, colour=\"grey10\", alpha=0.5,linetype=2)+\n  geom_text(aes(y=Outcomes,x=-0.7, label = label, col=Predictor), size = 3.5, position=position_dodge(width=0.8))+\n  scale_y_discrete(limits = rev(levels(as.factor(estimated$Outcomes))))+ # reverse order of y-axis\n  scale_x_continuous(limits = c(-0.9, 0.9), breaks = seq(-1,1,by=0.4))+\n    theme_bw()+\n  ylab(\"Continuous outcome traits\")+\n  xlab(\"Linear regression:\\nbeta (95%CI)\")+\n  ggtitle(\"Lifetime brain atrophy\\n(second neuroimaging visit)\")+\n  scale_color_manual(labels = c(\"Difference score\", \"Ratio score\", \"Residual score\"), values = c(\"#D81B60\", \"#FFC107\", \"#004D40\")) +\n  theme(plot.title = element_text(face = \"plain\", size=17, hjust = 0.5))+ # add centred title\n  theme(text = element_text(size=12),\n        axis.text.x = element_text(size=12),#angle=45\n        axis.text.y = element_text(size=12),\n        axis.title.y = element_text(face=\"bold\", colour='black', size=12),\n        axis.title.x = element_text(colour='black', size=12),\n        panel.border = element_blank(),\n        plot.title = element_text(face = \"bold\", colour='black', size=13))+\n  theme(legend.position=\"none\")\n\n############## OBSERVED ATROPHY\n### only keep longitudinal atrophy\nobserved = assoc[grepl(\"TBV\",assoc$Predictor),]\n# restrict to continuous variables only\nobserved = observed[grepl(\"Linear\", observed$Stat.model)]\n\n# order phenotypes\nobserved$Outcomes <- factor(observed$Outcome, \n                             levels=c(\"cog\",\"BMI\",\"brainAge\"),\n                             labels = c(\"Cog\",\"BMI\",\"BrainAge\"),\n                             ordered=T)\n\nobsLinear=ggplot(data=observed, aes(y=Outcomes,x=beta),shape=3)+\n  geom_point(aes(col=Predictor),size=2,position=position_dodge(width=0.5))+\n  geom_errorbar(aes(xmin=ci_l, xmax=ci_u,col=Predictor), linewidth=1, width=.2,position=position_dodge(width=0.5))+\n  geom_vline(xintercept = 0, colour=\"grey10\", alpha=0.5,linetype=2)+\n  geom_text(aes(y=Outcomes,x=-0.7, label = label, col=Predictor), size = 3.5,position=position_dodge(width=0.8))+\n    scale_y_discrete(limits = rev(levels(as.factor(observed$Outcomes))))+ # reverse order of y-axis\n  scale_x_continuous(limits = c(-0.9, 0.9), breaks = seq(-1,1,by=0.4))+\n  theme_bw()+\n  ylab(\"ontinuous outcome traits\")+\n  xlab(\"Linear regression:\\nbeta (95%CI)\")+\n  ggtitle(\"Observed atrophic changes\\n(first to second neuroimaging visit)\")+\n  scale_color_manual(labels = c(\"Difference score\", \"Ratio score\", \"Residual score\"), values = c(\"#D81B60\", \"#FFC107\", \"#004D40\")) +\n  theme(plot.title = element_text(face = \"plain\", size=17, hjust = 0.5))+ # add centred title\n  theme(text = element_text(size=12),\n        axis.text.x = element_text(size=12),#angle=45\n        axis.text.y = element_text(size=12),\n        axis.title.y = element_blank(),\n        panel.border = element_blank(),\n        axis.title.x = element_text(colour='black', size=12),\n        plot.title = element_text(face = \"bold\", colour='black', size=12))+\n  theme(legend.position=\"none\")\n\n######################################################################################\n###### Binary traits\n######################################################################################\n############## ESTIMATED ATROPHY\n### first, only estimated atrophy\n# only keep 'diff_stand', 'ratio_stand' or 'resid_stand'\nestimated = assoc[grepl(\"diff_stand|ratio_stand|resid_stand\",assoc$Predictor),]\n# restrict to visit 3 (more atrophy)\nestimated = estimated[grepl(\"3\", estimated$wave),]\n# restrict to continuous variables only\nestimated = estimated[grepl(\"Logistic|Hurdle\", estimated$Stat.model)]\n\n# transform beta to OR\nestimated$OR = exp(estimated$beta)\nestimated$ORci_l = exp(estimated$beta - (1.96 * estimated$std.error))\nestimated$ORci_u = exp(estimated$beta + (1.96 * estimated$std.error))\n\n# display as log odds\nestimated$logOdds = log(estimated$OR)\nestimated$logOdds_ci_l = log(estimated$ORci_l)\nestimated$logOdds_ci_u = log(estimated$ORci_u)\n\n# order phenotypes\nestimated$Outcomes <- factor(estimated$Outcome, \n                             levels=c(\"dementia\",\"APOEe4\",\"diabetes\",\"stroke\",\"hypertension\",\"packyears\",\"frailty\"),\n                             labels = c(\"Dementia\",\"APOEe4\",\"Diabetes\",\"Stroke\",\"Hypertension\",\"Packyears\",\"Frailty\"),\n                             ordered=T)\n\nestLog=ggplot(data=estimated, aes(y=Outcomes,x=OR),shape=3)+\n  xlim(0, 2.3)+\n  geom_point(aes(col=Predictor),size=2,position=position_dodge(width=0.5))+\n  geom_errorbar(aes(xmin=ORci_l, xmax=ORci_u,col=Predictor), linewidth=1, width=.2,position=position_dodge(width=0.5))+\n  geom_vline(xintercept = 1, colour=\"grey10\", alpha=0.5,linetype=2)+\n  geom_text(aes(y=Outcomes,x=0.4, label = label, col=Predictor), size = 3.5,position=position_dodge(width=0.8))+\n    scale_y_discrete(limits = rev(levels(as.factor(estimated$Outcomes))))+ # reverse order of y-axis\n  scale_x_continuous(limits = c(0.3,3.1), breaks = seq(0,3,by=0.4))+\n  theme_bw()+\n  ylab(\"Binary outcome traits\")+\n  xlab(\"Logistic regression:\\nOdds ratio (95%CI)\")+\n  #ggtitle(\"'Estimated' brain atrophy\\n(at wave 5)\")+\n  scale_color_manual(labels = c(\"Difference score\", \"Ratio score\", \"Residual score\"), values = c(\"#D81B60\", \"#FFC107\", \"#004D40\")) +\n  theme(plot.title = element_text(face = \"plain\", size=17, hjust = 0.5))+ # add centred title\n  theme(text = element_text(size=12),\n        axis.text.x = element_text(size=12),#angle=45\n        axis.text.y = element_text(size=12),\n        panel.border = element_blank(),\n        axis.title.y = element_text(face=\"bold\", colour='black', size=12),\n        axis.title.x = element_text(colour='black', size=12),\n        plot.title = element_text(face = \"bold\", colour='black', size=13))+\n  theme(legend.position=\"none\")\n\n############## OBSERVED ATROPHY\n### only keep longitudinal atrophy\nobserved = assoc[grepl(\"TBV\",assoc$Predictor),]\n# restrict to continuous variables only\nobserved = observed[grepl(\"Logistic|Hurdle\", observed$Stat.model)]\n\n# transform beta to OR\nobserved$OR = exp(observed$beta)\nobserved$ORci_l = exp(observed$beta - (1.96 * observed$std.error))\nobserved$ORci_u = exp(observed$beta + (1.96 * observed$std.error))\n\n# order phenotypes\nobserved$Outcomes <- factor(observed$Outcome, \n                             levels=c(\"dementia\",\"APOEe4\",\"diabetes\",\"stroke\",\"hypertension\",\"packyears\",\"frailty\"),\n                             labels = c(\"Dementia\",\"APOEe4\",\"Diabetes\",\"Stroke\",\"Hypertension\",\"Packyears\",\"Frailty\"),\n                             ordered=T)\n\nobsLog=ggplot(data=observed, aes(y=Outcomes,x=OR),shape=3)+\n  geom_point(aes(col=Predictor),size=2,position=position_dodge(width=0.5))+\n  geom_errorbar(aes(xmin=ORci_l, xmax=ORci_u,col=Predictor), linewidth=1, width=.2,position=position_dodge(width=0.5))+\n  geom_vline(xintercept = 1, colour=\"grey10\", alpha=0.5,linetype=2)+\n  geom_text(aes(y=Outcomes,x=0.4, label = label, col=Predictor), size = 3.5,position=position_dodge(width=1))+\n  scale_y_discrete(limits = rev(levels(as.factor(estimated$Outcomes))))+ # reverse order of y-axis\n  scale_x_continuous(limits = c(0.3,3.1), breaks = seq(0,3,by=0.4))+\n  theme_bw()+\n  ylab(\"Binary outcome traits\")+\n  xlab(\"Logistic regression:\\nOdds ratio (95%CI)\")+\n  #ggtitle(\"'Observed' brain atrophy\\n(wave 2 to 5)\")+\n  scale_color_manual(labels = c(\"Difference score\", \"Ratio score\", \"Residual score\"), values = c(\"#D81B60\", \"#FFC107\", \"#004D40\")) +\n  theme(plot.title = element_text(face = \"plain\", size=17, hjust = 0.5))+ # add centred title\n  theme(text = element_text(size=12),\n        axis.text.x = element_text(size=12),#angle=45\n        axis.text.y = element_text(size=12),\n        panel.border = element_blank(),\n        axis.title.y = element_blank(),\n        axis.title.x = element_text(colour='black', size=12),\n        plot.title = element_text(face = \"bold\", colour='black', size=13),\n        legend.position = \"bottom\")\n\n# plot all together\nlayout <- \"\nAB\nCD\nCD\n\"\n\nplot <- estLinear + obsLinear + estLog + obsLog + \n                    plot_layout(design = layout,guides = \"collect\")+\n                    plot_annotation(title = \"Brain atrophy correlations with health-related outcomes in UKB\",\n                  caption = \"Note: R2 estimates are only printed if the corresponding association passed correction for multiple testing (p=0.05/7).\\n'Packyears' & 'frailty' were analysed with Hurdle regression, but the coefficient printed here is from the negative binomial part of the equation,\\nhence on log-odds scale like the other binary traits. Pseudo-R2 estimates are for the full hurdle model.\",\n                    tag_levels = \"A\",\n                    theme = theme(legend.position = \"bottom\",plot.title = element_text(face = \"bold\", colour = \"black\", size = 14, hjust = 0.5))) \n\nggsave(paste0(out,\"phenotypic/UKB_assocs_cross_vs_long.jpg\"), bg = \"white\",plot = plot, width = 20, height = 28, units = \"cm\", dpi = 150)\n```\n:::\n\n\n![](images/UKB_assocs_cross_vs_long.jpg){fig-align=\"center\"}\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}