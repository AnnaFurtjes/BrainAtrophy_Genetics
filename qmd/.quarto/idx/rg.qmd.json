{"title":"Genetic correlations","markdown":{"yaml":{"title":"Genetic correlations","format":{"html":{"code-fold":true}},"author":"Anna Elisabeth Furtjes","date":"`r format(Sys.time(), '%d %B %Y')`","output":"html","doi":"test"},"headingText":"quarto::quarto_render(input = \"rg.qmd\", output_file = \"rg.html\")","containsRefs":false,"markdown":"\n\n------------------------------------------------------------------------\n\n```{r setup, include=F, warning=F, message=F, eval=F}\nload(\"paths.RData\")\n```\n\n## Genetic correlations in GenomicSEM\n\n### Munge\n\n```{r munge, eval=F}\nlibrary(devtools)\n# install_github(\"GenomicSEM/GenomicSEM\")\nlibrary(GenomicSEM)\nlibrary(stringr)\nlibrary(data.table)\n\n#######################################################################\n### MUNGE\n#######################################################################\nfiles <- list.files(pattern = \"GWAS_brainAtrophy_\")\n#files <- files[grepl(\"males\", files)]\nhm3 <- \"/eur_w_ld_chr/w_hm3.snplist\"\nmaf.filter = 0.01\ninfo.filter = 0.9\n\n# cycle through each of the files\nfor(i in files){\n\n\t# read in file first\n\tfile <- fread(i)\n\t# if it's residual or ratio score, we flip the effect sizes because that was also done throughout the rest of manuscript to harmonise the scores (higher score, more atrophy)\n\tif(grepl(\"ratio|resid\", i)){\n\t\tfile$BETA <- file$BETA * (-1)\n\t}\n\t# write temporarily because munge can't read in gz files\n\tfwrite(file, paste0(\"temp\",i,\".txt\"), na = \"NA\", quote = F, sep = \"\\t\", row.names = FALSE, col.names = TRUE)\n\n\t# isolate trait name\n\ttrait.name = str_remove(i, \"GWAS_brainAtrophy_\")\n\ttrait.name = str_remove(trait.name, \"_N43110.gz\")\n\n\t# munge this file\n\tmunge(files = paste0(\"temp\",i,\".txt\"), \n\t\t\ttrait.names = trait.name,\n\t\t\thm3 = hm3, \n\t\t\tmaf.filter = maf.filter, \n\t\t\tinfo.filter = info.filter,\n\t\t\tlog.name = paste0(trait.name),\n\t\t\tcolumn.names = list(SNP = \"ID\", \n\t\t\t\t\t\t\t\tA1 = \"ALLELE1\",\n\t\t\t\t\t\t\t\tA2 = \"ALLELE0\", \n\t\t\t\t\t\t\t\teffect = \"BETA\", \n\t\t\t\t\t\t\t\tP = \"P\", \n\t\t\t\t\t\t\t\tN = \"N\"))\n\t# remove temp file again\n\tfile.remove(paste0(\"temp\",i,\".txt\"))\n}\n\n############################################################\n#### Munging difficult sumstats\n############################################################\nlibrary(devtools)\nlibrary(GenomicSEM)\nlibrary(stringr)\nlibrary(data.table)\nlibrary(tidyr)\n\n\nsetwd(\"/CCACE_Shared/Anna_F/BrainAtrophy/data/GWASsumstats\")\n\nhm3 <- \"/CCACE_Shared/Anna_F/BrainAtrophy/eur_w_ld_chr/w_hm3.snplist\"\nmaf.filter = 0.01\ninfo.filter = 0.9\n\ni=list.files(pattern = \"CHARGE\")\nfile <- fread(i, fill=TRUE)\n\n# separate fused column\nfile <- separate(file, col = \"N RSNUMBERS\", into = c(\"N\",\"RSNUMBER\"), sep = \" \")\n# some rows are empty and the entry has shifted to to column V13\nfile$RSNUMBER <- ifelse(is.na(file$RSNUMBER), file$V13, file$RSNUMBER)\n# problem with p-value column - rename\nnames(file)[grep(\"P-\", names(file))] <- \"P\"\n\n# write temporarily because munge can't read in gz files\nfwrite(file, paste0(\"temp\",i,\".txt\"), na = \"NA\", quote = F, sep = \"\\t\", row.names = FALSE, col.names = TRUE)\n\n# isolate trait name\ntrait.name = \"ICV_Adams.et.al\"\n\n# munge this file\nmunge(files = paste0(\"temp\",i,\".txt\"), \n\t\ttrait.names = trait.name,\n\t\thm3 = hm3, \n\t\tmaf.filter = maf.filter, \n\t\tinfo.filter = info.filter,\n\t\tlog.name = paste0(trait.name),\n\t\tcolumn.names = list(SNP = \"RSNUMBER\", \n\t\t\t\t\t\t\tA1 = \"Allele1\",\n\t\t\t\t\t\t\tA2 = \"Allele2\", \n\t\t\t\t\t\t\tZ = \"Zscore\", \n\t\t\t\t\t\t\tP = \"P\", \n\t\t\t\t\t\t\tN = \"Weight\"))\n\n# remove temp file again\nfile.remove(paste0(\"temp\",i,\".txt\"))\n```\n\n### Genetic correlations\n\n```{r rg, eval=F}\n#######################################################################\n### LDSC\n#######################################################################\nlibrary(devtools)\nlibrary(GenomicSEM)\nlibrary(stringr)\n\n# vector of munged sumstats\ntraits <- list.files(pattern = \".sumstats.gz\")\n# remove log files\ntraits <- traits[!grepl(\".log\", traits)]\n# remove BrainChange GWAS because they produce negative h2 estimate\ntraits = traits[!grepl(\"BrainChange\", traits)]\n# remove male and female specific sumstats\ntraits = traits[!grepl(\"males\", traits)]\n# remove SNP-by-age analyses\ntraits = traits[!grepl(\"SNPxage\", traits)]\n\n# trait.names\ntrait.names <- str_remove(traits, pattern = \".sumstats.gz\")\n# folder with ld scores\nld = \"eur_w_ld_chr/\"\n# folder with ld weights\nwld = \"eur_w_ld_chr/\"\n\n# run ldsc\nLDSCoutput <- ldsc(traits = traits, \n\t\t\t\t\tld = ld, wld = wld, \n\t\t\t\t\tsample.prev = rep(NA, length(traits)),\n\t\t\t\t\tpopulation.prev = rep(NA, length(traits)),\n\t\t\t\t\ttrait.names = trait.names,\n\t\t\t\t\tstand = T)\n\n# dimnames\ndimnames(LDSCoutput$S)[[1]] <- dimnames(LDSCoutput$S)[[2]]\ndimnames(LDSCoutput$S_Stand)[[1]] <- dimnames(LDSCoutput$S)[[2]]\ndimnames(LDSCoutput$S_Stand)[[2]] <- dimnames(LDSCoutput$S)[[2]]\ndimnames(LDSCoutput$I)[[1]] <- dimnames(LDSCoutput$S)[[2]]\ndimnames(LDSCoutput$I)[[2]] <- dimnames(LDSCoutput$S)[[2]]\n\nsave(LDSCoutput, file = \"LDSCoutput_neurodegenrative.RData\")\n#save(LDSCoutput, file = \"LDSCoutput_sexsplit.RData\")\n\n###########################################################################\n#### Calculate associated matrix of Z statistics for this rG matrix\n###########################################################################\nlibrary(gdata)\nS_LD<-LDSCoutput$S\n\n#pull V: the sampling covariance matrix\nV_LD<-LDSCoutput$V\n\n#standardize S [equivalent of cov2cor]\nD=sqrt(diag(diag(S_LD)))\nS_Stand=solve(D)%*%S_LD%*%solve(D)\nrownames(S_Stand)<-rownames(S_LD)\ncolnames(S_Stand)<-colnames(S_Stand)\n\n#obtain diagonals of the original V matrix and take their sqrt to get SE's\nDvcov<-sqrt(diag(V_LD))\n\n#calculate the ratio of the rescaled and original S matrices\nscaleO=as.vector(lowerTriangle((S_Stand/S_LD),diag=T))\n\n## Make sure that if ratio in NaN (devision by zero) we put the zero back in\nscaleO[is.nan(scaleO)] <- 0\n\n#rescale the SEs by the same multiples that the S matrix was rescaled by\nDvcovl<-as.vector(Dvcov*t(scaleO))\n\n#obtain the sampling correlation matrix by standardizing the original V matrix\nVcor<-cov2cor(V_LD)\n\n#rescale the sampling correlation matrix by the appropriate diagonals\nV_stand<-diag(Dvcovl)%*%Vcor%*%diag(Dvcovl)\n\n#calculate SEs of rg\nk<-nrow(LDSCoutput$S)\nSE_stand<-matrix(0, k, k)\nSE_stand[lower.tri(SE_stand,diag=TRUE)] <-sqrt(diag(V_stand))\n\n#calculate Z of rg matrix\nZ_cor<-S_Stand/SE_stand\n```\n\n### Plot results (full sample)\n\n```{r plot, eval=F}\n###########################################################################\n#### Genetic correlation matrix\n###########################################################################\n### INCLUDE NEURODEGENERATIVE DISEASES\n\nload(\"LDSCoutput_neurodegenrative.RData\")\n\n# pull out correlation matrix\ncormat <- LDSCoutput$S_Stand\n\n# re-roder\ncormat = cormat[c(\"ALZ\", \"ALZ_2019\", \"PD\", \"ALS\", \"ICV_Adams.et.al\", \"TBV_Zhao.et.al\", \"TBV_Smith.et.al\", \"PC1_whole_brain_greymatter\", \"brainage\", \"ICVstand\", \"TBVstand\", \"CSFstand\", \"diff_stand\", \"ratio_stand\", \"resid_stand\"), c(\"ALZ\", \"ALZ_2019\", \"PD\", \"ALS\", \"ICV_Adams.et.al\", \"TBV_Zhao.et.al\", \"TBV_Smith.et.al\", \"PC1_whole_brain_greymatter\", \"brainage\", \"ICVstand\", \"TBVstand\", \"CSFstand\", \"diff_stand\", \"ratio_stand\", \"resid_stand\")]\n\n# re-name\ndimnames(cormat)[[1]] <-c(\"Alzheimer's & related dementias\\n(Bellenguez et al., 2021)\", \"Alzheimer's\\n(Kunkle et al., 2019)\", \"Parkinson's\\n(Nalls et al., 2019)\", \"Amyotrophic lateral sclerosis\\n(van Rheenen et al. 2021)\", \"ICV\\n(Adams et al., 2016)\", \"TBV\\n(Zhao et al., 2018)\", \"TBV\\n(Smith et al., 2021)\", \"Grey matter whole brain PC1\\n(Furtjes et al., 2023)\", \"Brain age\\n(Kaufmann et al., 2019)\",\"ICV\", \"TBV\", \"CSF\", \"Difference score\\n(cross)\", \"Ratio score\\n(cross)\", \"Residual score\\n(cross)\")\ndimnames(cormat)[[2]] <-c(\"Alzheimer's & related dementias\\n(Bellenguez et al., 2021)\", \"Alzheimer's\\n(Kunkle et al., 2019)\", \"Parkinson's\\n(Nalls et al., 2019)\", \"Amyotrophic lateral sclerosis\\n(van Rheenen et al. 2021)\", \"ICV\\n(Adams et al., 2016)\", \"TBV\\n(Zhao et al., 2018)\", \"TBV\\n(Smith et al., 2021)\", \"Grey matter whole brain PC1\\n(Furtjes et al., 2023)\", \"Brain age\\n(Kaufmann et al., 2019)\",\"ICV\", \"TBV\", \"CSF\", \"Difference score\\n(cross)\", \"Ratio score\\n(cross)\", \"Residual score\\n(cross)\")\n\n# define function to obtain lower triangle\n  get_lower_tri<-function(cormat){\n    cormat[upper.tri(cormat)] <- NA\n    return(cormat)\n  }\n\n  # get correlation matrix for both samples together\n  cor = get_lower_tri(cormat)\n  # melt matrix\n  melted = reshape2::melt(cor)\n\t# one value is > 1 which can happen sometimes\n\tmelted$value[melted$value > 1.01] <- 1\n\t# get rounded value\n  melted$value_round = round(melted$value, digit = 2)\n  melted$distance0 = abs(melted$value)\n\n\t# for some reason one corr over 1 doesn't get colored\n\tmelted$value <- ifelse(melted$value > 1, 1, melted$value)\n\n\t# pull out standard errors\n\t# SEs will be listed in the same order as they are listed in the genetic covariance matrix\t\n\tr<-nrow(LDSCoutput$S)\n    SE_Stand<-matrix(0, r, r)\n    SE_Stand[lower.tri(SE_Stand,diag=TRUE)] <-sqrt(diag(LDSCoutput$V_Stand))\n\tdimnames(SE_Stand)<- dimnames(LDSCoutput$S)\n\n\t# re-roder\n\tSE_Stand = SE_Stand[c(\"ALZ\",\"ALZ_2019\",\"PD\",\"ALS\",\"ICV_Adams.et.al\",\"TBV_Zhao.et.al\", \"TBV_Smith.et.al\", \"PC1_whole_brain_greymatter\",\"brainage\", \"ICVstand\", \"TBVstand\", \"CSFstand\", \"diff_stand\", \"ratio_stand\", \"resid_stand\"), c(\"ALZ\",\"ALZ_2019\",\"PD\",\"ALS\",\"ICV_Adams.et.al\", \"TBV_Zhao.et.al\", \"TBV_Smith.et.al\", \"PC1_whole_brain_greymatter\",\"brainage\", \"ICVstand\", \"TBVstand\", \"CSFstand\", \"diff_stand\", \"ratio_stand\", \"resid_stand\")]\n\n\t# re-name\n\tdimnames(SE_Stand)[[1]] <-c(\"Alzheimer's & related dementias\\n(Bellenguez et al., 2021)\", \"Alzheimer's\\n(Kunkle et al., 2019)\", \"Parkinson's\\n(Nalls et al., 2019)\", \"Amyotrophic lateral sclerosis\\n(van Rheenen et al. 2021)\", \"ICV\\n(Adams et al., 2016)\", \"TBV\\n(Zhao et al., 2018)\", \"TBV\\n(Smith et al., 2021)\", \"Grey matter whole brain PC1\\n(Furtjes et al., 2023)\", \"Brain age\\n(Kaufmann et al., 2019)\",\"ICV\", \"TBV\", \"CSF\", \"Difference score\\n(cross)\", \"Ratio score\\n(cross)\", \"Residual score\\n(cross)\")\n\tdimnames(SE_Stand)[[2]] <-c(\"Alzheimer's & related dementias\\n(Bellenguez et al., 2021)\", \"Alzheimer's\\n(Kunkle et al., 2019)\", \"Parkinson's\\n(Nalls et al., 2019)\", \"Amyotrophic lateral sclerosis\\n(van Rheenen et al. 2021)\", \"ICV\\n(Adams et al., 2016)\", \"TBV\\n(Zhao et al., 2018)\", \"TBV\\n(Smith et al., 2021)\", \"Grey matter whole brain PC1\\n(Furtjes et al., 2023)\", \"Brain age\\n(Kaufmann et al., 2019)\",\"ICV\", \"TBV\", \"CSF\", \"Difference score\\n(cross)\", \"Ratio score\\n(cross)\", \"Residual score\\n(cross)\")\n\t\n\n\t#melt data\n\tSEmelted <- reshape2::melt(SE_Stand)\n\tnames(SEmelted)[grepl(\"value\", names(SEmelted))] <- \"SE\"\n\t# merge with corr data\n\tboth = merge(melted, SEmelted, by = c(\"Var1\", \"Var2\"), all.x = T)\n\t# work out confidence intervals\n\tboth$ci_u <- both$value + (1.96*both$SE)\n\tboth$ci_l <- both$value - (1.96*both$SE)\n\n\t# get sig assocs\n\tboth$sig <- \"\"\n\tboth$sig[which(both$ci_u > 0 & both$ci_l < 0)] <- \"\\n(ns.)\"\n\tboth$sig[which(both$ci_u < 0 & both$ci_l > 0)] <- \"\\n(ns.)\"\n\tboth$sig[is.na(both$value)] <- NA\n\tboth$value_round <- paste0(both$value_round, \" \", both$sig)\n\tboth$value_round[is.na(both$value)] <- NA\n\t#both$value_round[grep(\"NA\", both$value_round)] <- str_remove(both$value_round[grep(\"NA\", both$value_round)], pattern = \" NA\")\n\n  # plot\n  library(ggplot2)\n\n  p = ggplot()+\n    geom_point(data = both, aes(x = Var1, y = Var2, shape = value, fill = value, size = distance0), shape = 21, alpha = 0.7, colour = \"white\") +\n    scale_fill_gradient2(low = \"grey45\", mid = \"white\", high = \"grey45\",limit = c(-1,1), space = \"Lab\" ,name=\"Correlation\", guide = \"legend\")+\n    scale_size_continuous(range = c(1, 15), guide = \"none\")+\n    geom_text(data = both, aes(Var1, Var2, label = value_round), color = \"black\", size = 3)+\n\tgeom_rect(aes(xmax = stage(\"Residual score\\n(cross)\", after_scale(xmax+0.5)), \n\t\t\t\t\txmin = stage(\"Residual score\\n(cross)\", after_scale(xmin-0.5)), \n\t\t\t\t\tymax = stage(\"Residual score\\n(cross)\", after_scale(ymax+0.5)), \n\t\t\t\t\tymin = stage(\"Alzheimer's & related dementias\\n(Bellenguez et al., 2021)\", after_scale(ymin-0.5))), fill = \"#004D40\", alpha = 0.3)+\n\tgeom_rect(aes(xmax = stage(\"Ratio score\\n(cross)\", after_scale(xmax+0.5)), \n\t\t\t\t\txmin = stage(\"Ratio score\\n(cross)\", after_scale(xmin-0.5)), \n\t\t\t\t\tymax = stage(\"Ratio score\\n(cross)\", after_scale(ymax+0.5)), \n\t\t\t\t\tymin = stage(\"Alzheimer's & related dementias\\n(Bellenguez et al., 2021)\", after_scale(ymin-0.5))), fill = \"#FFC107\", alpha = 0.3)+\n\tgeom_rect(aes(xmax = stage(\"Difference score\\n(cross)\", after_scale(xmax+0.5)), \n\t\t\t\t\txmin = stage(\"Difference score\\n(cross)\", after_scale(xmin-0.5)), \n\t\t\t\t\tymax = stage(\"Difference score\\n(cross)\", after_scale(ymax+0.5)), \n\t\t\t\t\tymin = stage(\"Alzheimer's & related dementias\\n(Bellenguez et al., 2021)\", after_scale(ymin-0.5))), fill = \"#D81B60\", alpha = 0.3)+\n    xlab(\"\")+\n    ylab(\"\")+\n    #scale_x_discrete(labels = axisNames)+\n    #scale_y_discrete(labels = axisNames)+\n    guides(fill = \"none\")+\n    theme_bw()+\n    theme(panel.border = element_blank(),\n\t\t\taxis.text.x = element_text(angle = 270, vjust = 0, hjust =0))+\n\tggtitle(\"Genetic correlations\")\n\nggsave(\"genetic_corr_neurodeg.png\", plot = p, width = 22, height = 22, units = \"cm\", dpi = 600)\n```\n\n![](images/genetic_corr_neurodeg.png)\n\n### Plot sex-split correlations\n\n```{r, eval=F}\n###########################################################################\n#### Genetic correlation matrix\n#### Sex split\n###########################################################################\nload(\"LDSCoutput_sexsplit.RData\")\n\n# pull out correlation matrix\ncormat <- LDSCoutput$S_Stand\n\n# re-roder\ncormat = cormat[c(\"ICVstand\",\"TBVstand\",\"CSFstand\",\"diff_stand\", \"ratio_stand\", \"resid_stand\", \"diff_stand_males\", \"ratio_stand_males\",\"resid_stand_males\",\"diff_stand_females\", \"ratio_stand_females\", \"resid_stand_females\"), c(\"ICVstand\",\"TBVstand\",\"CSFstand\",\"diff_stand\", \"ratio_stand\", \"resid_stand\", \"diff_stand_males\", \"ratio_stand_males\",\"resid_stand_males\",\"diff_stand_females\", \"ratio_stand_females\", \"resid_stand_females\")]\n\n# re-name\ndimnames(cormat)[[1]] <-c(\"ICV (all)\",\"TBV (all)\",\"CSF (all)\",\"Difference Score (all)\", \"Ratio score (all)\", \"Residual score (all)\", \"Difference Score (males)\", \"Ratio score (males)\",\"Residual score (males)\",\"Difference Score (females)\", \"Ratio score (females)\", \"Residual score (females)\")\ndimnames(cormat)[[2]] <-c(\"ICV (all)\",\"TBV (all)\",\"CSF (all)\",\"Difference Score (all)\", \"Ratio score (all)\", \"Residual score (all)\", \"Difference Score (males)\", \"Ratio score (males)\",\"Residual score (males)\",\"Difference Score (females)\", \"Ratio score (females)\", \"Residual score (females)\")\n\n# define function to obtain lower triangle\n  get_lower_tri<-function(cormat){\n    cormat[upper.tri(cormat)] <- NA\n    return(cormat)\n  }\n\n  # get correlation matrix for both samples together\n  cor = get_lower_tri(cormat)\n  # melt matrix\n  melted = reshape2::melt(cor)\n\t# one value is > 1 which can happen sometimes\n\tmelted$value[melted$value > 1.01] <- 1\n\t# get rounded value\n  melted$value_round = round(melted$value, digit = 2)\n  melted$distance0 = abs(melted$value)\n\n\t# for some reason one corr over 1 doesn't get colored\n\tmelted$value <- ifelse(melted$value > 1, 1, melted$value)\n\n\t# pull out standard errors\n\t# SEs will be listed in the same order as they are listed in the genetic covariance matrix\t\n\tr<-nrow(LDSCoutput$S)\n    SE_Stand<-matrix(0, r, r)\n    SE_Stand[lower.tri(SE_Stand,diag=TRUE)] <-sqrt(diag(LDSCoutput$V_Stand))\n\tdimnames(SE_Stand)<- dimnames(LDSCoutput$S)\n\n\t# re-roder\n\tSE_Stand = SE_Stand[c(\"ICVstand\",\"TBVstand\",\"CSFstand\",\"diff_stand\", \"ratio_stand\", \"resid_stand\", \"diff_stand_males\", \"ratio_stand_males\",\"resid_stand_males\",\"diff_stand_females\", \"ratio_stand_females\", \"resid_stand_females\") ,c(\"ICVstand\",\"TBVstand\",\"CSFstand\",\"diff_stand\", \"ratio_stand\", \"resid_stand\", \"diff_stand_males\", \"ratio_stand_males\",\"resid_stand_males\",\"diff_stand_females\", \"ratio_stand_females\", \"resid_stand_females\")]\n\n\t# re-name\n\tdimnames(SE_Stand)[[1]] <-c(\"ICV (all)\",\"TBV (all)\",\"CSF (all)\",\"Difference Score (all)\", \"Ratio score (all)\", \"Residual score (all)\", \"Difference Score (males)\", \"Ratio score (males)\",\"Residual score (males)\",\"Difference Score (females)\", \"Ratio score (females)\", \"Residual score (females)\")\n\tdimnames(SE_Stand)[[2]] <-c(\"ICV (all)\",\"TBV (all)\",\"CSF (all)\",\"Difference Score (all)\", \"Ratio score (all)\", \"Residual score (all)\", \"Difference Score (males)\", \"Ratio score (males)\",\"Residual score (males)\",\"Difference Score (females)\", \"Ratio score (females)\", \"Residual score (females)\")\n\t\n\n\t#melt data\n\tSEmelted <- reshape2::melt(SE_Stand)\n\tnames(SEmelted)[grepl(\"value\", names(SEmelted))] <- \"SE\"\n\t# merge with corr data\n\tboth = merge(melted, SEmelted, by = c(\"Var1\", \"Var2\"), all.x = T)\n\t# work out confidence intervals\n\tboth$ci_u <- both$value + (1.96*both$SE)\n\tboth$ci_l <- both$value - (1.96*both$SE)\n\n\t# get sig assocs\n\tboth$sig <- \"\"\n\tboth$sig[which(both$ci_u > 0 & both$ci_l < 0)] <- \"\\n(ns.)\"\n\tboth$sig[which(both$ci_u < 0 & both$ci_l > 0)] <- \"\\n(ns.)\"\n\tboth$sig[is.na(both$value)] <- NA\n\tboth$value_round <- paste0(both$value_round, \" \", both$sig)\n\tboth$value_round[is.na(both$value)] <- NA\n\t#both$value_round[grep(\"NA\", both$value_round)] <- str_remove(both$value_round[grep(\"NA\", both$value_round)], pattern = \" NA\")\n\n  # plot\n  library(ggplot2)\n\n  p = ggplot()+\n    geom_point(data = both, aes(x = Var1, y = Var2, shape = value, fill = value, size = distance0), shape = 21, alpha = 0.7, colour = \"white\") +\n    scale_fill_gradient2(low = \"#91D2D9\", mid = \"white\", high = \"#FFC4C4\",limit = c(-1,1), space = \"Lab\" ,name=\"Correlation\", guide = \"legend\")+\n    scale_size_continuous(range = c(1, 15), guide = \"none\")+\n    geom_text(data = both, aes(Var1, Var2, label = value_round), color = \"black\", size = 3)+\n    xlab(\"\")+\n    ylab(\"\")+\n    #scale_x_discrete(labels = axisNames)+\n    #scale_y_discrete(labels = axisNames)+\n    guides(fill = \"none\")+\n    theme_bw()+\n    theme(panel.border = element_blank(),\n\t\t\taxis.text.x = element_text(angle = 270, vjust = 0, hjust =0))+\n\tggtitle(\"Genetic correlations\")\n\nggsave(\"genetic_corr_sexsplit.png\", plot = p, width = 20, height = 20, units = \"cm\", dpi = 600)\n```\n\n![](images/genetic_corr_sexsplit.png){fig-align=\"center\"}\n\n## GWAS-by-subtraction in GenomicSEM\n\n```{r sub, eval=F}\nsetwd(wd)\nlibrary(devtools)\nlibrary(GenomicSEM)\n\n#### Step 2\ntraits <- c(\"TBVstand.sumstats.gz\",\"ICVstand.sumstats.gz\",\"resid_stand.sumstats.gz\")\nsample.prev <- rep(NA, length(traits))\npopulation.prev <- rep(NA, length(traits))\nld<-\"eur_w_ld_chr/\"\nwld <- \"eur_w_ld_chr/\"\ntrait.names<-c(\"TBV\", \"ICV\", \"resid\")\n\nLDSCoutput <- ldsc(traits = traits, \n                   sample.prev = sample.prev, \n                   population.prev = population.prev, \n                   ld=ld, \n                   wld=wld, \n                   trait.names=trait.names,\n\t\t\t\t\tstand = T)\n\n\nsave(LDSCoutput, file=\"LDSCoutput_TBV_ICV.RData\")\n\n###### Step 3\nload(file=paste0(wd, \"/LDSCoutput_TBV_ICV.RData\"))\n\n# BaseICV is captured by both diff atrophy score and ICV\n# Atrophy however should only be indicated by diff atrophy score and should be independent of ICV\nmodel<-'\n\t\tBaseICV=~NA*TBV + ICV\n        Atrophy=~NA*TBV\n         \n\t\t# make sure all variances and covariances are captured by the latent factors\n         Atrophy ~~ 1*Atrophy\n         BaseICV ~~ 1*BaseICV\n\t\t# forcing atrophy and BaseICV to be uncorrelated\n         Atrophy~~0*BaseICV\n\n         ICV ~~ 0*TBV\n         ICV ~~ 0*ICV\n         TBV ~~ 0*TBV\n\n\t\t# add in resid to how correlated it is with Atrophy\n\t\tAtrophy ~~ resid\n\t\tBaseICV ~~ resid\n'\n\n# this is a fully saturated model (which is why no fit statistics are printed)\noutput<-usermodel(LDSCoutput,estimation=\"DWLS\",model=model)\n\n## Step 4\n# files to prepare\nfiles = c(paste0(GWASwd, \"/GWAS_brainAtrophy_TBVstand_N43110.gz\"), \n\t\tpaste0(GWASwd, \"/GWAS_brainAtrophy_ICVstand_N43110.gz\"))\n\nfile.exists(files)\n\nref = \"reference.1000G.maf.0.005.txt.gz\"\ntrait.names = c(\"TBV\",\"ICV\")\n# SEs are not on a logistic scale\nse.logit = c(F,F)\ninfo.filter = 0.6\nmaf.filter = 0.01\n#betas = c(\"BETA\",\"BETA\")\n\nsumstats <- sumstats(files = files, \n\t\t\t\t\t\tref = ref, \n\t\t\t\t\t\ttrait.names = trait.names, \n\t\t\t\t\t\tse.logit = se.logit, \n\t\t\t\t\t\tinfo.filter = info.filter, \n\t\t\t\t\t\tmaf.filter = maf.filter, \n\t\t\t\t\t\t#betas = betas,\n\t\t\t\t\t\tOLS=c(T,T),\n\t\t\t\t\t\tlinprob=NULL,N=c(43110,43110), \n\t\t\t\t\t\tparallel = F)\n\nsave(sumstats, file=\"Sumstats_TBV_ICV.RData\")\n\nfile.exists(\"Sumstats_TBV_ICV.RData\")\n```\n\n### SNP-level analysis\n\nThe script below makes it easier to parallelise SNP-level GWAS-by-subtraction analyses in GenomicSEM (make sure you change the model in the script when using this). Run this with: `Rscript GWASbySubtractionPARALLEL.R --chr 3 --RData Sumstats_TBV_ICV.RData --LDSCout LDSCoutput_TBV_ICV.RData --outPath GWASbySubtraction`\n\n```{r pal, eval=F}\n#!/usr/bin/Rscript\n# Run the 5th step of GWAS-by-subtraction to parallelise each chromosome \n\nif (!require(\"optparse\")) install.packages(\"optparse\", repos=\"https://cran.rstudio.com/\")\nsuppressMessages(library(\"optparse\"))\n\n\n# SET OPTIONS\noption_list = list(\n  make_option(\"--chr\", action = \"store\", default = NA, type = \"character\",\n              help = \"Chrosomome to be processed [required]\"),\n\tmake_option(\"--trait1\", action = \"store\", default = NA, type = \"character\",\n              help = \"Trait 1 [required]\"),\n\tmake_option(\"--trait2\", action = \"store\", default = NA, type = \"character\",\n              help = \"Trait 2 [required]\"),\n  make_option(\"--RData\", action = \"store\", default = NA, type = \"character\",\n              help = \"RData containing cleaned sumstats [required]\"),\n\tmake_option(\"--LDSCout\", action = \"store\", default = NA, type = \"character\",\n              help = \"LDSC output [required]\"),\n    make_option(\"--outPath\", action = \"store\", default = NA, type = \"character\",\n              help = \"Output file name [required]\")\n)\n\nopt = parse_args(OptionParser(option_list=option_list))\n\nlibrary(devtools)\nlibrary(GenomicSEM)\n\n# FEEDBACK ON OPTIONS\nprint(Sys.time())\nprint(paste0(\"GWAS-by-subtraction CHR = \", opt$chr))\n\nprint(opt$RData)\nprint(paste0(opt$outPath,\"/Atrophy_GWASbySubtraction\", opt$chr,\".RData\"))\n\n## Step 5\n# load LDSC output\nload(file=opt$LDSCout)\n\n# load in RData file with cleaned SNP data\nfile = opt$RData\nload(file)\n# keep only one chromosome\nsumstats = sumstats[which(sumstats$CHR == opt$chr),]\n\nprint(table(sumstats$CHR))\n\n# SNP model\nmodelSNP<-'\n\t\tBaseICV=~NA*TBV + start(0.8)*ICV\n        Atrophy=~NA*TBV\n         \n\t\t# make sure all variances and covariances are captured by the latent factors\n         Atrophy ~~ 1*Atrophy\n         BaseICV ~~ 1*BaseICV\n         ICV ~~ 0*TBV\n         ICV ~~ 0*ICV\n         TBV ~~ 0*TBV\n\n\t\t# forcing atrophy and BaseICV to be uncorrelated\n         Atrophy~~0*BaseICV\n\n\t\t# add in SNP effect\n\t\tAtrophy ~ SNP\n\t\tBaseICV ~ SNP\n\t\tSNP ~~ SNP\n'\n\n\n\n#Run the Genomic SEM GWAS\noutputGWAS<-userGWAS(covstruc=LDSCoutput,\n\t\t\t\t\tSNPs=sumstats,\n\t\t\t\t\testimation=\"ML\",\n\t\t\t\t\tsub =c(\"Atrophy ~ SNP\"),\n\t\t\t\t\tQ_SNP = T,\n\t\t\t\t\tsmooth_check = T, \n\t\t\t\t\tparallel = T,\n\t\t\t\t\tGC = \"standard\",\n\t\t\t\t\tMPI = F,\n\t\t\t\t\tfix_measurement = T,\n\t\t\t\t\tmodel=modelSNP,\n\t\t\t\t\tcores = 5,\n\t\t\t\t\ttoler = F, \n\t\t\t\t\tSNPSE = F) # printwarn = FALSE\n\nsave(outputGWAS, file=paste0(opt$outPath,\"/Atrophy_GWASbySubtraction_\", opt$chr,\".RData\"))\n\n\n##### Run with \n# Rscript GWASbySubtractionPARALLEL.R --chr 3 --RData Sumstats_TBV_ICV.RData --LDSCout LDSCoutput_TBV_ICV.RData --outPath GWASbySubtraction\n```\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":"html","warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"rg.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.1.189","theme":"journal","title":"Genetic correlations","author":"Anna Elisabeth Furtjes","date":"`r format(Sys.time(), '%d %B %Y')`","doi":"test"},"extensions":{"book":{"multiFile":true}}}}}